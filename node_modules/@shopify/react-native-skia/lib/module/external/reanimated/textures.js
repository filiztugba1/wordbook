import { useEffect, useMemo } from "react";
import { drawAsImageFromPicture, drawAsPicture } from "../../renderer/Offscreen";
import { runOnUI, useSharedValue } from "./moduleWrapper";
const createTextureValue = (texture, picture, size) => {
  "worklet";

  texture.value = drawAsImageFromPicture(picture, size);
};
export const useTextureValue = (element, size) => {
  const picture = useMemo(() => {
    return drawAsPicture(element);
  }, [element]);
  return useTextureValueFromPicture(picture, size);
};
export const useTextureValueFromPicture = (picture, size) => {
  const texture = useSharedValue(null);
  useEffect(() => {
    runOnUI(createTextureValue)(texture, picture, size);
  }, [texture, picture, size]);
  return texture;
};
//# sourceMappingURL=textures.js.map