{"ast":null,"code":"'use strict';\n\nimport { useRef } from 'react';\nimport { makeMutable } from \"./core\";\nimport { shouldBeUseWeb } from \"./PlatformChecker\";\nexport function makeViewDescriptorsSet() {\n  var shareableViewDescriptors = makeMutable([]);\n  var data = {\n    shareableViewDescriptors: shareableViewDescriptors,\n    add: function add(item) {\n      shareableViewDescriptors.modify(function (descriptors) {\n        'worklet';\n\n        var index = descriptors.findIndex(function (descriptor) {\n          return descriptor.tag === item.tag;\n        });\n        if (index !== -1) {\n          descriptors[index] = item;\n        } else {\n          descriptors.push(item);\n        }\n        return descriptors;\n      }, false);\n    },\n    remove: function remove(viewTag) {\n      shareableViewDescriptors.modify(function (descriptors) {\n        'worklet';\n\n        var index = descriptors.findIndex(function (descriptor) {\n          return descriptor.tag === viewTag;\n        });\n        if (index !== -1) {\n          descriptors.splice(index, 1);\n        }\n        return descriptors;\n      }, false);\n    }\n  };\n  return data;\n}\nvar SHOULD_BE_USE_WEB = shouldBeUseWeb();\nexport var useViewRefSet = SHOULD_BE_USE_WEB ? useViewRefSetJS : useViewRefSetNative;\nfunction useViewRefSetNative() {\n  return undefined;\n}\nfunction useViewRefSetJS() {\n  var ref = useRef(null);\n  if (ref.current === null) {\n    var data = {\n      items: new Set(),\n      add: function add(item) {\n        if (data.items.has(item)) return;\n        data.items.add(item);\n      },\n      remove: function remove(item) {\n        data.items.delete(item);\n      }\n    };\n    ref.current = data;\n  }\n  return ref.current;\n}","map":{"version":3,"names":["useRef","makeMutable","shouldBeUseWeb","makeViewDescriptorsSet","shareableViewDescriptors","data","add","item","modify","descriptors","index","findIndex","descriptor","tag","push","remove","viewTag","splice","SHOULD_BE_USE_WEB","useViewRefSet","useViewRefSetJS","useViewRefSetNative","undefined","ref","current","items","Set","has","delete"],"sources":["D:\\react-native-uygulamalarÄ±m\\wordbook\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\ViewDescriptorsSet.ts"],"sourcesContent":["'use strict';\nimport { useRef } from 'react';\nimport { makeMutable } from './core';\nimport type { SharedValue } from './commonTypes';\nimport type { Descriptor } from './hook/commonTypes';\nimport { shouldBeUseWeb } from './PlatformChecker';\n\nexport interface ViewRefSet<T> {\n  items: Set<T>;\n  add: (item: T) => void;\n  remove: (item: T) => void;\n}\n\nexport interface ViewDescriptorsSet {\n  shareableViewDescriptors: SharedValue<Descriptor[]>;\n  add: (item: Descriptor) => void;\n  remove: (viewTag: number) => void;\n}\n\nexport function makeViewDescriptorsSet(): ViewDescriptorsSet {\n  const shareableViewDescriptors = makeMutable<Descriptor[]>([]);\n  const data: ViewDescriptorsSet = {\n    shareableViewDescriptors,\n    add: (item: Descriptor) => {\n      shareableViewDescriptors.modify((descriptors) => {\n        'worklet';\n        const index = descriptors.findIndex(\n          (descriptor) => descriptor.tag === item.tag\n        );\n        if (index !== -1) {\n          descriptors[index] = item;\n        } else {\n          descriptors.push(item);\n        }\n        return descriptors;\n      }, false);\n    },\n\n    remove: (viewTag: number) => {\n      shareableViewDescriptors.modify((descriptors) => {\n        'worklet';\n        const index = descriptors.findIndex(\n          (descriptor) => descriptor.tag === viewTag\n        );\n        if (index !== -1) {\n          descriptors.splice(index, 1);\n        }\n        return descriptors;\n      }, false);\n    },\n  };\n  return data;\n}\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nexport const useViewRefSet = SHOULD_BE_USE_WEB\n  ? useViewRefSetJS\n  : useViewRefSetNative;\n\nfunction useViewRefSetNative() {\n  // Stub native implementation.\n  return undefined;\n}\n\nfunction useViewRefSetJS<T>(): ViewRefSet<T> {\n  const ref = useRef<ViewRefSet<T> | null>(null);\n  if (ref.current === null) {\n    const data: ViewRefSet<T> = {\n      items: new Set(),\n\n      add: (item: T) => {\n        if (data.items.has(item)) return;\n        data.items.add(item);\n      },\n\n      remove: (item: T) => {\n        data.items.delete(item);\n      },\n    };\n    ref.current = data;\n  }\n\n  return ref.current;\n}\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,WAAW;AAGpB,SAASC,cAAc;AAcvB,OAAO,SAASC,sBAAsBA,CAAA,EAAuB;EAC3D,IAAMC,wBAAwB,GAAGH,WAAW,CAAe,EAAE,CAAC;EAC9D,IAAMI,IAAwB,GAAG;IAC/BD,wBAAwB,EAAxBA,wBAAwB;IACxBE,GAAG,EAAG,SAAAA,IAAAC,IAAgB,EAAK;MACzBH,wBAAwB,CAACI,MAAM,CAAE,UAAAC,WAAW,EAAK;QAC/C,SAAS;;QACT,IAAMC,KAAK,GAAGD,WAAW,CAACE,SAAS,CAChC,UAAAC,UAAU;UAAA,OAAKA,UAAU,CAACC,GAAG,KAAKN,IAAI,CAACM,GAAG;QAAA,EAC5C;QACD,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;UAChBD,WAAW,CAACC,KAAK,CAAC,GAAGH,IAAI;QAC3B,CAAC,MAAM;UACLE,WAAW,CAACK,IAAI,CAACP,IAAI,CAAC;QACxB;QACA,OAAOE,WAAW;MACpB,CAAC,EAAE,KAAK,CAAC;IACX,CAAC;IAEDM,MAAM,EAAG,SAAAA,OAAAC,OAAe,EAAK;MAC3BZ,wBAAwB,CAACI,MAAM,CAAE,UAAAC,WAAW,EAAK;QAC/C,SAAS;;QACT,IAAMC,KAAK,GAAGD,WAAW,CAACE,SAAS,CAChC,UAAAC,UAAU;UAAA,OAAKA,UAAU,CAACC,GAAG,KAAKG,OAAO;QAAA,EAC3C;QACD,IAAIN,KAAK,KAAK,CAAC,CAAC,EAAE;UAChBD,WAAW,CAACQ,MAAM,CAACP,KAAK,EAAE,CAAC,CAAC;QAC9B;QACA,OAAOD,WAAW;MACpB,CAAC,EAAE,KAAK,CAAC;IACX;EACF,CAAC;EACD,OAAOJ,IAAI;AACb;AAEA,IAAMa,iBAAiB,GAAGhB,cAAc,EAAE;AAE1C,OAAO,IAAMiB,aAAa,GAAGD,iBAAiB,GAC1CE,eAAe,GACfC,mBAAmB;AAEvB,SAASA,mBAAmBA,CAAA,EAAG;EAE7B,OAAOC,SAAS;AAClB;AAEA,SAASF,eAAeA,CAAA,EAAqB;EAC3C,IAAMG,GAAG,GAAGvB,MAAM,CAAuB,IAAI,CAAC;EAC9C,IAAIuB,GAAG,CAACC,OAAO,KAAK,IAAI,EAAE;IACxB,IAAMnB,IAAmB,GAAG;MAC1BoB,KAAK,EAAE,IAAIC,GAAG,EAAE;MAEhBpB,GAAG,EAAG,SAAAA,IAAAC,IAAO,EAAK;QAChB,IAAIF,IAAI,CAACoB,KAAK,CAACE,GAAG,CAACpB,IAAI,CAAC,EAAE;QAC1BF,IAAI,CAACoB,KAAK,CAACnB,GAAG,CAACC,IAAI,CAAC;MACtB,CAAC;MAEDQ,MAAM,EAAG,SAAAA,OAAAR,IAAO,EAAK;QACnBF,IAAI,CAACoB,KAAK,CAACG,MAAM,CAACrB,IAAI,CAAC;MACzB;IACF,CAAC;IACDgB,GAAG,CAACC,OAAO,GAAGnB,IAAI;EACpB;EAEA,OAAOkB,GAAG,CAACC,OAAO;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}