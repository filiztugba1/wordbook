{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { UnavailabilityError } from 'expo-modules-core';\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport ExponentSpeech from \"./ExponentSpeech\";\nimport { VoiceQuality } from \"./Speech.types\";\nvar SpeechEventEmitter = ExponentSpeech && new NativeEventEmitter(ExponentSpeech);\nexport { VoiceQuality };\nvar _CALLBACKS = {};\nvar _nextCallbackId = 1;\nvar _didSetListeners = false;\nfunction _unregisterListenersIfNeeded() {\n  if (Object.keys(_CALLBACKS).length === 0) {\n    removeSpeakingListener('Exponent.speakingStarted');\n    removeSpeakingListener('Exponent.speakingWillSayNextString');\n    removeSpeakingListener('Exponent.speakingDone');\n    removeSpeakingListener('Exponent.speakingStopped');\n    removeSpeakingListener('Exponent.speakingError');\n    _didSetListeners = false;\n  }\n}\nfunction _registerListenersIfNeeded() {\n  if (_didSetListeners) return;\n  _didSetListeners = true;\n  setSpeakingListener('Exponent.speakingStarted', function (_ref) {\n    var id = _ref.id;\n    var options = _CALLBACKS[id];\n    if (options && options.onStart) {\n      options.onStart();\n    }\n  });\n  setSpeakingListener('Exponent.speakingWillSayNextString', function (_ref2) {\n    var id = _ref2.id,\n      charIndex = _ref2.charIndex,\n      charLength = _ref2.charLength;\n    var options = _CALLBACKS[id];\n    if (options && options.onBoundary) {\n      options.onBoundary({\n        charIndex: charIndex,\n        charLength: charLength\n      });\n    }\n  });\n  setSpeakingListener('Exponent.speakingDone', function (_ref3) {\n    var id = _ref3.id;\n    var options = _CALLBACKS[id];\n    if (options && options.onDone) {\n      options.onDone();\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingStopped', function (_ref4) {\n    var id = _ref4.id;\n    var options = _CALLBACKS[id];\n    if (options && options.onStopped) {\n      options.onStopped();\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingError', function (_ref5) {\n    var id = _ref5.id,\n      error = _ref5.error;\n    var options = _CALLBACKS[id];\n    if (options && options.onError) {\n      options.onError(new Error(error));\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n}\nexport function speak(text) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var id = _nextCallbackId++;\n  _CALLBACKS[id] = options;\n  _registerListenersIfNeeded();\n  ExponentSpeech.speak(String(id), text, options);\n}\nexport function getAvailableVoicesAsync() {\n  return _getAvailableVoicesAsync.apply(this, arguments);\n}\nfunction _getAvailableVoicesAsync() {\n  _getAvailableVoicesAsync = _asyncToGenerator(function* () {\n    if (!ExponentSpeech.getVoices) {\n      throw new UnavailabilityError('Speech', 'getVoices');\n    }\n    return ExponentSpeech.getVoices();\n  });\n  return _getAvailableVoicesAsync.apply(this, arguments);\n}\nexport function isSpeakingAsync() {\n  return _isSpeakingAsync.apply(this, arguments);\n}\nfunction _isSpeakingAsync() {\n  _isSpeakingAsync = _asyncToGenerator(function* () {\n    return ExponentSpeech.isSpeaking();\n  });\n  return _isSpeakingAsync.apply(this, arguments);\n}\nexport function stop() {\n  return _stop.apply(this, arguments);\n}\nfunction _stop() {\n  _stop = _asyncToGenerator(function* () {\n    return ExponentSpeech.stop();\n  });\n  return _stop.apply(this, arguments);\n}\nexport function pause() {\n  return _pause.apply(this, arguments);\n}\nfunction _pause() {\n  _pause = _asyncToGenerator(function* () {\n    if (!ExponentSpeech.pause) {\n      throw new UnavailabilityError('Speech', 'pause');\n    }\n    return ExponentSpeech.pause();\n  });\n  return _pause.apply(this, arguments);\n}\nexport function resume() {\n  return _resume.apply(this, arguments);\n}\nfunction _resume() {\n  _resume = _asyncToGenerator(function* () {\n    if (!ExponentSpeech.resume) {\n      throw new UnavailabilityError('Speech', 'resume');\n    }\n    return ExponentSpeech.resume();\n  });\n  return _resume.apply(this, arguments);\n}\nfunction setSpeakingListener(eventName, callback) {\n  var listenerCount = SpeechEventEmitter.listenerCount ? SpeechEventEmitter.listenerCount(eventName) : SpeechEventEmitter.listeners(eventName).length;\n  if (listenerCount > 0) {\n    SpeechEventEmitter.removeAllListeners(eventName);\n  }\n  SpeechEventEmitter.addListener(eventName, callback);\n}\nfunction removeSpeakingListener(eventName) {\n  SpeechEventEmitter.removeAllListeners(eventName);\n}\nexport var maxSpeechInputLength = ExponentSpeech.maxSpeechInputLength || Number.MAX_VALUE;","map":{"version":3,"names":["UnavailabilityError","NativeEventEmitter","ExponentSpeech","VoiceQuality","SpeechEventEmitter","_CALLBACKS","_nextCallbackId","_didSetListeners","_unregisterListenersIfNeeded","Object","keys","length","removeSpeakingListener","_registerListenersIfNeeded","setSpeakingListener","_ref","id","options","onStart","_ref2","charIndex","charLength","onBoundary","_ref3","onDone","_ref4","onStopped","_ref5","error","onError","Error","speak","text","arguments","undefined","String","getAvailableVoicesAsync","_getAvailableVoicesAsync","apply","_asyncToGenerator","getVoices","isSpeakingAsync","_isSpeakingAsync","isSpeaking","stop","_stop","pause","_pause","resume","_resume","eventName","callback","listenerCount","listeners","removeAllListeners","addListener","maxSpeechInputLength","Number","MAX_VALUE"],"sources":["D:\\react-native-uygulamalarÄ±m\\wordbook\\node_modules\\expo-speech\\src\\Speech\\Speech.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\nimport { NativeEventEmitter } from 'react-native';\n\nimport ExponentSpeech from './ExponentSpeech';\nimport { SpeechOptions, SpeechEventCallback, VoiceQuality, Voice, WebVoice } from './Speech.types';\n\nconst SpeechEventEmitter = ExponentSpeech && new NativeEventEmitter(ExponentSpeech);\n\nexport { SpeechOptions, SpeechEventCallback, VoiceQuality, Voice, WebVoice };\n\nconst _CALLBACKS = {};\nlet _nextCallbackId = 1;\nlet _didSetListeners = false;\n\nfunction _unregisterListenersIfNeeded() {\n  if (Object.keys(_CALLBACKS).length === 0) {\n    removeSpeakingListener('Exponent.speakingStarted');\n    removeSpeakingListener('Exponent.speakingWillSayNextString');\n    removeSpeakingListener('Exponent.speakingDone');\n    removeSpeakingListener('Exponent.speakingStopped');\n    removeSpeakingListener('Exponent.speakingError');\n    _didSetListeners = false;\n  }\n}\n\nfunction _registerListenersIfNeeded() {\n  if (_didSetListeners) return;\n  _didSetListeners = true;\n  setSpeakingListener('Exponent.speakingStarted', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onStart) {\n      options.onStart();\n    }\n  });\n  setSpeakingListener('Exponent.speakingWillSayNextString', ({ id, charIndex, charLength }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onBoundary) {\n      options.onBoundary({\n        charIndex,\n        charLength,\n      });\n    }\n  });\n  setSpeakingListener('Exponent.speakingDone', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onDone) {\n      options.onDone();\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingStopped', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onStopped) {\n      options.onStopped();\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingError', ({ id, error }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onError) {\n      options.onError(new Error(error));\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n}\n\n// @needsAudit\n/**\n * Speak out loud the text given options. Calling this when another text is being spoken adds\n * an utterance to queue.\n * @param text The text to be spoken. Cannot be longer than [`Speech.maxSpeechInputLength`](#speechmaxspeechinputlength).\n * @param options A `SpeechOptions` object.\n */\nexport function speak(text: string, options: SpeechOptions = {}) {\n  const id = _nextCallbackId++;\n  _CALLBACKS[id] = options;\n  _registerListenersIfNeeded();\n  ExponentSpeech.speak(String(id), text, options);\n}\n\n// @needsAudit\n/**\n * Returns list of all available voices.\n * @return List of `Voice` objects.\n */\nexport async function getAvailableVoicesAsync(): Promise<Voice[]> {\n  if (!ExponentSpeech.getVoices) {\n    throw new UnavailabilityError('Speech', 'getVoices');\n  }\n  return ExponentSpeech.getVoices();\n}\n\n//@needsAudit\n/**\n * Determine whether the Text-to-speech utility is currently speaking. Will return `true` if speaker\n * is paused.\n * @return Returns a Promise that fulfils with a boolean, `true` if speaking, `false` if not.\n */\nexport async function isSpeakingAsync(): Promise<boolean> {\n  return ExponentSpeech.isSpeaking();\n}\n\n// @needsAudit\n/**\n * Interrupts current speech and deletes all in queue.\n */\nexport async function stop(): Promise<void> {\n  return ExponentSpeech.stop();\n}\n\n// @needsAudit\n/**\n * Pauses current speech. This method is not available on Android.\n */\nexport async function pause(): Promise<void> {\n  if (!ExponentSpeech.pause) {\n    throw new UnavailabilityError('Speech', 'pause');\n  }\n  return ExponentSpeech.pause();\n}\n\n// @needsAudit\n/**\n * Resumes speaking previously paused speech or does nothing if there's none. This method is not\n * available on Android.\n */\nexport async function resume(): Promise<void> {\n  if (!ExponentSpeech.resume) {\n    throw new UnavailabilityError('Speech', 'resume');\n  }\n\n  return ExponentSpeech.resume();\n}\n\nfunction setSpeakingListener(eventName, callback) {\n  // @ts-ignore: the EventEmitter interface has been changed in react-native@0.64.0\n  const listenerCount = SpeechEventEmitter.listenerCount\n    ? // @ts-ignore: this is available since 0.64\n      SpeechEventEmitter.listenerCount(eventName)\n    : // @ts-ignore: this is available in older versions\n      SpeechEventEmitter.listeners(eventName).length;\n  if (listenerCount > 0) {\n    SpeechEventEmitter.removeAllListeners(eventName);\n  }\n  SpeechEventEmitter.addListener(eventName, callback);\n}\n\nfunction removeSpeakingListener(eventName) {\n  SpeechEventEmitter.removeAllListeners(eventName);\n}\n\n// @needsAudit\n/**\n * Maximum possible text length acceptable by `Speech.speak()` method. It is platform-dependent.\n * On iOS, this returns `Number.MAX_VALUE`.\n */\nexport const maxSpeechInputLength: number = ExponentSpeech.maxSpeechInputLength || Number.MAX_VALUE;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}