{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { BarChart } from 'react-native-chart-kit';\nimport Svg, { Circle, G, Text as SvgText } from 'react-native-svg';\nimport { PieChart } from 'react-native-svg-charts';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DailyScreen = function DailyScreen(_ref) {\n  var user = _ref.user,\n    onItemLongPress = _ref.onItemLongPress;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showModal = _useState2[0],\n    setShowModal = _useState2[1];\n  var _useState3 = useState([{\n      date: '2024-02-01',\n      log: \"Bugün harika bir gün geçirdim!\"\n    }, {\n      date: '2024-02-02',\n      log: \"Ders çalıştım ve birkaç kitap okudum.\"\n    }, {\n      date: '2024-02-03',\n      log: \"Yürüyüş yaptım ve doğayla vakit geçirdim.\"\n    }]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    dailyLogs = _useState4[0],\n    setDailyLogs = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    newLog = _useState6[0],\n    setNewLog = _useState6[1];\n  var addLog = function addLog() {\n    if (newLog.trim() !== '') {\n      setDailyLogs([].concat(_toConsumableArray(dailyLogs), [{\n        date: new Date().toISOString().slice(0, 10),\n        log: newLog\n      }]));\n      setNewLog('');\n      setShowModal(false);\n    }\n  };\n  return _jsxs(ScrollView, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(View, {}), _jsxs(View, {\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setShowModal(true);\n        },\n        style: {\n          alignItems: 'center',\n          backgroundColor: '#1877f2',\n          padding: 10,\n          borderRadius: 5,\n          marginBottom: 20,\n          marginHorizontal: 20\n        },\n        children: _jsx(Text, {\n          style: {\n            color: 'white'\n          },\n          children: \"G\\xFCnl\\xFCk Ekle\"\n        })\n      }), dailyLogs.map(function (log, index) {\n        return _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return onItemLongPress(log.log);\n          },\n          children: [_jsx(Text, {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: log.date\n          }), _jsx(Text, {\n            children: log.log\n          })]\n        }, index);\n      }), _jsx(Modal, {\n        visible: showModal,\n        animationType: \"slide\",\n        children: _jsxs(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: [_jsx(TextInput, {\n            placeholder: \"G\\xFCnl\\xFCk yaz\\u0131n\\u0131z...\",\n            multiline: true,\n            value: newLog,\n            onChangeText: setNewLog,\n            style: {\n              borderWidth: 1,\n              borderColor: '#ccc',\n              padding: 10,\n              width: '80%',\n              marginBottom: 10\n            }\n          }), _jsx(Button, {\n            title: \"Ekle\",\n            onPress: addLog\n          }), _jsx(Button, {\n            title: \"\\u0130ptal\",\n            onPress: function onPress() {\n              return setShowModal(false);\n            },\n            color: \"red\"\n          })]\n        })\n      })]\n    })]\n  });\n};\nexport default DailyScreen;","map":{"version":3,"names":["React","useState","View","Text","Image","ScrollView","TouchableOpacity","Modal","TextInput","Button","BarChart","Svg","Circle","G","SvgText","PieChart","jsx","_jsx","jsxs","_jsxs","DailyScreen","_ref","user","onItemLongPress","_useState","_useState2","_slicedToArray","showModal","setShowModal","_useState3","date","log","_useState4","dailyLogs","setDailyLogs","_useState5","_useState6","newLog","setNewLog","addLog","trim","concat","_toConsumableArray","Date","toISOString","slice","style","flex","children","onPress","alignItems","backgroundColor","padding","borderRadius","marginBottom","marginHorizontal","color","map","index","fontWeight","visible","animationType","justifyContent","placeholder","multiline","value","onChangeText","borderWidth","borderColor","width","title"],"sources":["D:/react-native-uygulamalarım/wordbook/component/DailyScreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, Image, ScrollView, TouchableOpacity, Modal, TextInput, Button } from 'react-native';\r\nimport { BarChart } from 'react-native-chart-kit';\r\nimport Svg, { Circle, G, Text as SvgText } from 'react-native-svg';\r\nimport { PieChart } from 'react-native-svg-charts';\r\n\r\nconst DailyScreen = ({ user, onItemLongPress }) => {\r\n  const [showModal, setShowModal] = useState(false); // Günlük ekleme modalının görünürlüğünü saklar\r\n  const [dailyLogs, setDailyLogs] = useState([\r\n    { date: '2024-02-01', log: \"Bugün harika bir gün geçirdim!\" },\r\n    { date: '2024-02-02', log: \"Ders çalıştım ve birkaç kitap okudum.\" },\r\n    { date: '2024-02-03', log: \"Yürüyüş yaptım ve doğayla vakit geçirdim.\" }\r\n  ]); // Günlüklerin listesi\r\n\r\n  const [newLog, setNewLog] = useState(''); // Yeni eklenecek günlüğü saklar\r\n\r\n  // Günlük ekleme işlevi\r\n  const addLog = () => {\r\n    if (newLog.trim() !== '') {\r\n      setDailyLogs([...dailyLogs, { date: new Date().toISOString().slice(0, 10), log: newLog }]);\r\n      setNewLog(''); // Yeni günlüğü sıfırla\r\n      setShowModal(false); // Modalı kapat\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={{ flex: 1 }}>\r\n      {/* Kapak Fotoğrafı ve Profil Resmi */}\r\n      <View>\r\n        {/* Buraya kapak fotoğrafı ve profil resmi gelecek */}\r\n      </View>\r\n\r\n      {/* Günlükler Listesi */}\r\n      <View>\r\n        {/* Günlük Ekle Butonu */}\r\n        <TouchableOpacity onPress={() => setShowModal(true)} style={{ alignItems: 'center', backgroundColor: '#1877f2', padding: 10, borderRadius: 5, marginBottom: 20, marginHorizontal: 20 }}>\r\n          <Text style={{ color: 'white' }}>Günlük Ekle</Text>\r\n        </TouchableOpacity>\r\n\r\n        {/* Günlükler Listesi */}\r\n        {dailyLogs.map((log, index) => (\r\n          <TouchableOpacity key={index} onPress={() => onItemLongPress(log.log)}>\r\n            <Text style={{ fontWeight: 'bold' }}>{log.date}</Text>\r\n            <Text>{log.log}</Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n\r\n        {/* Günlük Ekleme Modalı */}\r\n        <Modal visible={showModal} animationType=\"slide\">\r\n          <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <TextInput\r\n              placeholder=\"Günlük yazınız...\"\r\n              multiline\r\n              value={newLog}\r\n              onChangeText={setNewLog}\r\n              style={{ borderWidth: 1, borderColor: '#ccc', padding: 10, width: '80%', marginBottom: 10 }}\r\n            />\r\n            <Button title=\"Ekle\" onPress={addLog} />\r\n            <Button title=\"İptal\" onPress={() => setShowModal(false)} color=\"red\" />\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default DailyScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}