{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar WorkItem = function WorkItem(_ref) {\n  var onAddItem = _ref.onAddItem;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    dropmodalVisible = _useState4[0],\n    setdropModalVisible = _useState4[1];\n  var handleAddItem = function handleAddItem() {\n    var newItem = {\n      id: '3',\n      en: 'newWord',\n      means: [{\n        mean: 'yeni',\n        type: 'zf.'\n      }, {\n        mean: 'eklenen',\n        type: 'zf.'\n      }, {\n        mean: 'kelime',\n        type: 'zf.'\n      }],\n      examples: [{\n        name: 'it is new'\n      }, {\n        name: 'she is added'\n      }],\n      image: 'https://example.com/newImage.jpg'\n    };\n    onAddItem(newItem);\n    setModalVisible(false);\n  };\n  var handleDropModalVisible = function handleDropModalVisible() {\n    setModalVisible(modalVisible ? false : true);\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(Modal, {\n      visible: isModalVisible,\n      animationType: \"slide\",\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Yeni Kelime Ekle\"\n        }), _jsx(TouchableOpacity, {\n          style: styles.addButton,\n          onPress: handleAddItem,\n          children: _jsx(Text, {\n            style: styles.addButtonText,\n            children: \"Ekle\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.closeButton,\n          onPress: function onPress() {\n            return setModalVisible(false);\n          },\n          children: _jsx(FontAwesome, {\n            name: \"close\",\n            size: 24,\n            color: \"#000\"\n          })\n        })]\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.addItemButton,\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsxs(View, {\n        style: styles.buttonContent,\n        children: [_jsx(Ionicons, {\n          name: \"play\",\n          size: 24,\n          color: \"orange\"\n        }), _jsx(Text, {\n          style: styles.addItemText,\n          children: \"Al\\u0131\\u015Ft\\u0131rma Yap\"\n        })]\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: handleDropModalVisible,\n      children: _jsxs(View, {\n        style: styles.buttonContent,\n        children: [_jsx(Ionicons, {\n          name: \"play\",\n          size: 24,\n          color: \"orange\"\n        }), _jsx(Text, {\n          style: styles.addItemText,\n          children: \"Al\\u0131\\u015Ft\\u0131rma Yap\"\n        })]\n      })\n    }), _jsx(DropdownMenu, {\n      isVisible: dropmodalVisible,\n      onClose: function onClose() {\n        return setdropModalVisible(false);\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  buttonContent: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  addItemButton: {\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#e0e0e0',\n    borderRadius: 10,\n    marginBottom: 10,\n    marginTop: 10,\n    alignItems: 'center'\n  },\n  addItemText: {\n    fontSize: 15,\n    fontWeight: 'bold'\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  modalTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  addButton: {\n    backgroundColor: '#4CAF50',\n    padding: 10,\n    borderRadius: 5,\n    marginVertical: 10\n  },\n  addButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 20,\n    right: 20,\n    zIndex: 1\n  }\n});\nexport default WorkItem;","map":{"version":3,"names":["React","useState","Modal","TouchableOpacity","View","Text","StyleSheet","FontAwesome","Ionicons","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","WorkItem","_ref","onAddItem","_useState","_useState2","_slicedToArray","isModalVisible","setModalVisible","_useState3","_useState4","dropmodalVisible","setdropModalVisible","handleAddItem","newItem","id","en","means","mean","type","examples","name","image","handleDropModalVisible","modalVisible","children","visible","animationType","style","styles","modalContainer","modalTitle","addButton","onPress","addButtonText","closeButton","size","color","addItemButton","buttonContent","addItemText","DropdownMenu","isVisible","onClose","create","flexDirection","alignItems","padding","borderWidth","borderColor","borderRadius","marginBottom","marginTop","fontSize","fontWeight","flex","justifyContent","backgroundColor","marginVertical","textAlign","position","top","right","zIndex"],"sources":["D:/react-native-uygulamalarım/wordbook/component/WorkItem.jsx"],"sourcesContent":["// AddItem.js\r\n\r\nimport React, { useState } from 'react';\r\nimport { Modal, TouchableOpacity, View, Text, StyleSheet } from 'react-native';\r\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst WorkItem = ({ onAddItem }) => {\r\n    const [isModalVisible, setModalVisible] = useState(false);\r\n    const [dropmodalVisible, setdropModalVisible] = useState(false);\r\n    const handleAddItem = () => {\r\n        // Burada yeni bir öğe eklemek için gerekli işlemleri gerçekleştirebilirsiniz.\r\n        // Örneğin, bir form gösterip kullanıcının girdiği bilgilerle yeni bir öğe oluşturabilirsiniz.\r\n\r\n        // Örnek:\r\n        const newItem = {\r\n            id: '3',\r\n            en: 'newWord',\r\n            means: [\r\n                { mean: 'yeni', type: 'zf.' },\r\n                { mean: 'eklenen', type: 'zf.' },\r\n                { mean: 'kelime', type: 'zf.' },\r\n            ],\r\n            examples: [{ name: 'it is new' }, { name: 'she is added' }],\r\n            image: 'https://example.com/newImage.jpg',\r\n        };\r\n\r\n        onAddItem(newItem);\r\n\r\n        // İşlem tamamlandığında modal'ı kapat\r\n        setModalVisible(false);\r\n    };\r\n    const handleDropModalVisible = () => {\r\n        setModalVisible(modalVisible?false:true)\r\n    }\r\n    return (\r\n\r\n        <>\r\n            <Modal visible={isModalVisible} animationType=\"slide\">\r\n                <View style={styles.modalContainer}>\r\n                    {/* Yeni öğe eklemek için bir form veya bilgi girişi alanları ekleyebilirsiniz. */}\r\n                    <Text style={styles.modalTitle}>Yeni Kelime Ekle</Text>\r\n                    {/* ... (yeni öğe ekleme formu) */}\r\n                    <TouchableOpacity style={styles.addButton} onPress={handleAddItem}>\r\n                        <Text style={styles.addButtonText}>Ekle</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.closeButton} onPress={() => setModalVisible(false)}>\r\n                        <FontAwesome name=\"close\" size={24} color=\"#000\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </Modal>\r\n            <TouchableOpacity\r\n                style={styles.addItemButton}\r\n                onPress={() => setModalVisible(true)}\r\n            >\r\n                <View style={styles.buttonContent}>\r\n                    <Ionicons name=\"play\" size={24} color=\"orange\" />\r\n                    <Text style={styles.addItemText}>Alıştırma Yap</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity\r\n                onPress={handleDropModalVisible}\r\n            >\r\n                <View style={styles.buttonContent}>\r\n                    <Ionicons name=\"play\" size={24} color=\"orange\" />\r\n                    <Text style={styles.addItemText}>Alıştırma Yap</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n\r\n\r\n            <DropdownMenu\r\n                isVisible={dropmodalVisible}\r\n                onClose={() => setdropModalVisible(false)}\r\n            />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    // ... (diğer stiller)\r\n    buttonContent: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    addItemButton: {\r\n        padding: 10,\r\n        borderWidth: 1,\r\n        borderColor: '#e0e0e0',\r\n        borderRadius: 10,\r\n        marginBottom: 10,\r\n        marginTop: 10,\r\n        alignItems: 'center',\r\n    },\r\n    addItemText: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n    },\r\n    modalContainer: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#f5f5f5',\r\n    },\r\n    modalTitle: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 20,\r\n    },\r\n    addButton: {\r\n        backgroundColor: '#4CAF50',\r\n        padding: 10,\r\n        borderRadius: 5,\r\n        marginVertical: 10,\r\n    },\r\n    addButtonText: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 20,\r\n        right: 20,\r\n        zIndex: 1,\r\n    },\r\n});\r\n\r\nexport default WorkItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}