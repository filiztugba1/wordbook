{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { useSwipeable } from 'react-swipeable';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen(_ref) {\n  var onItemLongPress = _ref.onItemLongPress,\n    onItemPress = _ref.onItemPress,\n    isMultiSelectMode = _ref.isMultiSelectMode,\n    selectedItems = _ref.selectedItems;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentImages = _useState4[0],\n    setCurrentImages = _useState4[1];\n  var showImages = function showImages(images) {\n    setCurrentImages(images);\n    setModalVisible(true);\n  };\n  return _jsx(View, {\n    style: {\n      flex: 1\n    }\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  listItem: {\n    flexDirection: 'row',\n    padding: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0'\n  },\n  listItemText: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  listItemMessage: {\n    fontSize: 14,\n    color: '#888'\n  },\n  avatar: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    marginRight: 10\n  },\n  chatInfo: {\n    flex: 1\n  },\n  chatHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  time: {\n    fontSize: 12,\n    color: '#888'\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useState","View","Text","FlatList","StyleSheet","TouchableOpacity","Image","Modal","useSwipeable","jsx","_jsx","ProfileScreen","_ref","onItemLongPress","onItemPress","isMultiSelectMode","selectedItems","_useState","_useState2","_slicedToArray","isModalVisible","setModalVisible","_useState3","_useState4","currentImages","setCurrentImages","showImages","images","style","flex","styles","create","container","backgroundColor","listItem","flexDirection","padding","borderBottomWidth","borderBottomColor","listItemText","fontSize","fontWeight","listItemMessage","color","avatar","width","height","borderRadius","marginRight","chatInfo","chatHeader","justifyContent","time"],"sources":["D:/react-native-uygulamalarÄ±m/wordbook/component/ProfileScreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, FlatList, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { Image, Modal } from 'react-native';\r\nimport { useSwipeable } from 'react-swipeable';\r\n\r\n\r\nconst ProfileScreen = ({ onItemLongPress, onItemPress, isMultiSelectMode, selectedItems }) => {\r\n    const [isModalVisible, setModalVisible] = useState(false);\r\n    const [currentImages, setCurrentImages] = useState([]);\r\n\r\n    const showImages = (images) => {\r\n        setCurrentImages(images);\r\n        setModalVisible(true);\r\n    };\r\n  \r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n         \r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#f5f5f5'\r\n    },\r\n\r\n    listItem: {\r\n        flexDirection: 'row',\r\n        padding: 15,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#e0e0e0'\r\n    },\r\n    listItemText: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n    listItemMessage: {\r\n        fontSize: 14,\r\n        color: '#888'\r\n    },\r\n    avatar: {\r\n        width: 50,\r\n        height: 50,\r\n        borderRadius: 25,\r\n        marginRight: 10\r\n    },\r\n    chatInfo: {\r\n        flex: 1\r\n    },\r\n    chatHeader: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    time: {\r\n        fontSize: 12,\r\n        color: '#888'\r\n    }\r\n});\r\n\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,KAAA;AAGxC,SAASC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAG/C,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAA2E;EAAA,IAArEC,eAAe,GAAAD,IAAA,CAAfC,eAAe;IAAEC,WAAW,GAAAF,IAAA,CAAXE,WAAW;IAAEC,iBAAiB,GAAAH,IAAA,CAAjBG,iBAAiB;IAAEC,aAAa,GAAAJ,IAAA,CAAbI,aAAa;EACnF,IAAAC,SAAA,GAA0CjB,QAAQ,CAAC,KAAK,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,cAAc,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACtC,IAAAI,UAAA,GAA0CtB,QAAQ,CAAC,EAAE,CAAC;IAAAuB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/CE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EAEtC,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CAAIC,MAAM,EAAK;IAC3BF,gBAAgB,CAACE,MAAM,CAAC;IACxBN,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC;EAGD,OACIX,IAAA,CAACT,IAAI;IAAC2B,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE;EAAE,CAEnB,CAAC;AAEf,CAAC;AAED,IAAMC,MAAM,GAAG1B,UAAU,CAAC2B,MAAM,CAAC;EAC7BC,SAAS,EAAE;IACPH,IAAI,EAAE,CAAC;IACPI,eAAe,EAAE;EACrB,CAAC;EAEDC,QAAQ,EAAE;IACNC,aAAa,EAAE,KAAK;IACpBC,OAAO,EAAE,EAAE;IACXC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE;EACvB,CAAC;EACDC,YAAY,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAChB,CAAC;EACDC,eAAe,EAAE;IACbF,QAAQ,EAAE,EAAE;IACZG,KAAK,EAAE;EACX,CAAC;EACDC,MAAM,EAAE;IACJC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE;EACjB,CAAC;EACDC,QAAQ,EAAE;IACNpB,IAAI,EAAE;EACV,CAAC;EACDqB,UAAU,EAAE;IACRf,aAAa,EAAE,KAAK;IACpBgB,cAAc,EAAE;EACpB,CAAC;EACDC,IAAI,EAAE;IACFZ,QAAQ,EAAE,EAAE;IACZG,KAAK,EAAE;EACX;AACJ,CAAC,CAAC;AAGF,eAAehC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}