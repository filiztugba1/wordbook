{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from 'react';\nimport { Ionicons } from '@expo/vector-icons';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport AddItemFormComponent from \"./AddItemFormComponent\";\nimport AddGroupFormComponent from \"./AddGroupFormComponent\";\nimport * as Speech from 'expo-speech';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar chats = [{\n  id: 13,\n  en: 'about',\n  means: [{\n    mean: 'hemen hemen',\n    type: 'zf.',\n    id: 1\n  }, {\n    mean: 'aşağı yukarı',\n    type: 'zf.',\n    id: 2\n  }, {\n    mean: 'yaklaşık',\n    type: 'zf.',\n    id: 3\n  }],\n  examples: [{\n    name: 'it is about',\n    id: 1\n  }, {\n    name: 'she is about',\n    id: 2\n  }],\n  image: 'https://images-na.ssl-images-amazon.com/images/S/pv-target-images/ae4816cade1a5b7f29787d0b89610132c72c7747041481c6619b9cc3302c0101._RI_TTW_.jpg'\n}, {\n  id: 14,\n  en: 'above',\n  means: [{\n    mean: 'üzerine',\n    type: 'zf.',\n    id: 4\n  }, {\n    mean: 'yukarısında',\n    type: 'zf.',\n    id: 5\n  }, {\n    mean: 'yukarıda',\n    type: 'zf.',\n    id: 6\n  }],\n  examples: [{\n    name: 'it is above',\n    id: 3\n  }, {\n    name: 'she is above',\n    id: 4\n  }],\n  image: 'https://images-na.ssl-images-amazon.com/images/S/pv-target-images/ae4816cade1a5b7f29787d0b89610132c72c7747041481c6619b9cc3302c0101._RI_TTW_.jpg'\n}, {\n  id: 15,\n  en: 'action',\n  means: [{\n    mean: 'çalışma',\n    type: 'i.',\n    id: 7\n  }, {\n    mean: 'davranış',\n    type: 'i.',\n    id: 8\n  }, {\n    mean: 'aksiyon',\n    type: 'i.',\n    id: 9\n  }],\n  examples: [{\n    name: 'it is action',\n    id: 5\n  }, {\n    name: 'she is action',\n    id: 6\n  }],\n  image: 'https://images-na.ssl-images-amazon.com/images/S/pv-target-images/ae4816cade1a5b7f29787d0b89610132c72c7747041481c6619b9cc3302c0101._RI_TTW_.jpg'\n}, {\n  id: 16,\n  en: 'above',\n  means: [{\n    mean: 'üzerine',\n    type: 'zf.',\n    id: 10\n  }, {\n    mean: 'yukarısında',\n    type: 'zf.',\n    id: 11\n  }, {\n    mean: 'yukarıda',\n    type: 'zf.',\n    id: 12\n  }],\n  examples: [{\n    name: 'it is above',\n    id: 7\n  }, {\n    name: 'she is above',\n    id: 8\n  }],\n  image: ''\n}];\nvar speak = function speak(text) {\n  Speech.speak(text);\n};\nvar MultipleAnswer = function MultipleAnswer(_ref) {\n  var item = _ref.item,\n    onItemLongPress = _ref.onItemLongPress,\n    onItemPress = _ref.onItemPress,\n    _ref$selectedItems = _ref.selectedItems,\n    selectedItems = _ref$selectedItems === void 0 ? null : _ref$selectedItems,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 0 : _ref$type,\n    _ref$handlePrevCard = _ref.handlePrevCard,\n    handlePrevCard = _ref$handlePrevCard === void 0 ? null : _ref$handlePrevCard,\n    _ref$handleTick = _ref.handleTick,\n    handleTick = _ref$handleTick === void 0 ? null : _ref$handleTick,\n    _ref$handleNextCard = _ref.handleNextCard,\n    handleNextCard = _ref$handleNextCard === void 0 ? null : _ref$handleNextCard,\n    _ref$chats = _ref.chats,\n    chats = _ref$chats === void 0 ? null : _ref$chats;\n  var adverbs = item.means.filter(function (x) {\n    return x.type === 'zf.';\n  });\n  var nouns = item.means.filter(function (x) {\n    return x.type === 'i.';\n  });\n  var adjectives = item.means.filter(function (x) {\n    return x.type === 's.';\n  });\n  var pronouns = item.means.filter(function (x) {\n    return x.type === 'zm.';\n  });\n  var verbs = item.means.filter(function (x) {\n    return x.type === 'f.';\n  });\n  var getRandomMeaning = function getRandomMeaning() {\n    var randomIndex = Math.floor(Math.random() * chats.length);\n    if (chats[randomIndex].en === item.en) {\n      getRandomMeaning();\n    }\n    return chats[randomIndex].means.map(function (mean) {\n      return mean.mean;\n    }).join(', ');\n  };\n  var generateRandomOptions = function generateRandomOptions() {\n    var correctMeaning = item.means.map(function (mean) {\n      return mean.mean;\n    }).join(', ');\n    var min = 0;\n    var max = 5;\n    var randomNumber = Math.floor(Math.random() * (max - min) + min);\n    var options = [{\n      option: 'A',\n      meaning: randomNumber == 0 ? correctMeaning : getRandomMeaning()\n    }, {\n      option: 'B',\n      meaning: randomNumber == 1 ? correctMeaning : getRandomMeaning()\n    }, {\n      option: 'C',\n      meaning: randomNumber == 2 ? correctMeaning : getRandomMeaning()\n    }, {\n      option: 'D',\n      meaning: randomNumber == 3 ? correctMeaning : getRandomMeaning()\n    }, {\n      option: 'E',\n      meaning: randomNumber == 4 ? correctMeaning : getRandomMeaning()\n    }];\n    return options;\n  };\n  var randomOptions = generateRandomOptions();\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: [styles.listItem, {\n        marginVertical: 5,\n        marginHorizontal: 10,\n        backgroundColor: selectedItems != null && selectedItems.includes(item.id) ? '#ddd' : '#fff',\n        width: '95%'\n      }],\n      children: [type === 1 ? _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          left: 0,\n          right: 0,\n          zIndex: 2,\n          marginBottom: 5,\n          borderColor: '#e0e0e0',\n          backgroundColor: '#f5f5f5',\n          borderWidth: 1,\n          padding: 5,\n          borderRadius: 5\n        },\n        children: [_jsx(TouchableOpacity, {\n          onPress: handlePrevCard,\n          children: _jsx(Icon, {\n            name: \"caret-left\",\n            size: 30,\n            color: \"gray\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: handleTick,\n          children: _jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              left: 0,\n              right: 0,\n              zIndex: 2,\n              borderColor: '#e0e0e0',\n              backgroundColor: 'green',\n              borderWidth: 1,\n              padding: 5,\n              borderRadius: 5,\n              color: 'white'\n            },\n            children: [_jsx(Icon, {\n              name: \"check\",\n              size: 25,\n              color: \"white\"\n            }), _jsx(Text, {\n              size: 30,\n              color: \"green\"\n            }), \"\\xD6\\u011Frendim\", _jsx(Text, {})]\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: handleNextCard,\n          children: _jsx(Icon, {\n            name: \"caret-right\",\n            size: 30,\n            color: \"gray\"\n          })\n        })]\n      }) : '', item.image != '' ? _jsx(Image, {\n        source: {\n          uri: item.image\n        },\n        style: styles.avatar\n      }) : _jsx(View, {\n        style: styles.avatar,\n        children: _jsxs(View, {\n          style: styles.imagePlaceholder,\n          children: [_jsx(Icon, {\n            name: \"image\",\n            size: 50,\n            color: \"#888\"\n          }), _jsx(Text, {\n            children: \"Resim Yok\"\n          })]\n        })\n      }), type === 1 ? _jsx(View, {\n        style: styles.wordCard,\n        children: _jsxs(_Fragment, {\n          children: [_jsx(View, {\n            style: styles.wordDetails,\n            children: _jsx(Text, {\n              style: [styles.wordText, {\n                fontSize: 25\n              }],\n              children: item.en\n            })\n          }), _jsx(Ionicons, {\n            name: \"volume-high\",\n            size: 24,\n            color: \"#888\",\n            style: styles.soundIcon,\n            onPress: function onPress() {\n              return speak(item.en);\n            }\n          }), \" \"]\n        })\n      }) : '', _jsx(View, {\n        style: styles.listItemContent,\n        children: _jsxs(View, {\n          style: styles.chatInfo,\n          children: [type === 0 ? _jsx(View, {\n            style: styles.wordCard,\n            children: _jsxs(_Fragment, {\n              children: [_jsx(View, {\n                style: styles.wordDetails,\n                children: _jsx(Text, {\n                  style: styles.wordText,\n                  children: item.en\n                })\n              }), _jsx(Ionicons, {\n                name: \"volume-high\",\n                size: 24,\n                color: \"#888\",\n                style: styles.soundIcon,\n                onPress: function onPress() {\n                  return speak(item.en);\n                }\n              }), \" \"]\n            })\n          }) : '', _jsx(View, {\n            style: [styles.wordCard, {\n              marginTop: 4,\n              textAlign: \"center\"\n            }],\n            children: _jsx(View, {\n              children: _jsx(Text, {\n                style: {\n                  textAlign: \"left\",\n                  marginTop: 4,\n                  marginBottom: 4,\n                  marginLeft: 10\n                },\n                children: \"Anlam\\u0131 a\\u015Fa\\u011F\\u0131dakilerden hangisidir\"\n              })\n            })\n          })]\n        })\n      }), randomOptions.map(function (option, index) {\n        return _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            alignItems: 'center',\n            marginVertical: 4\n          },\n          children: [_jsxs(Text, {\n            style: {\n              marginRight: 8,\n              fontWeight: 'bold'\n            },\n            children: [option.option, \":\"]\n          }), _jsx(Text, {\n            children: option.meaning\n          })]\n        }, index);\n      })]\n    })\n  });\n};\nvar ChatItem = function ChatItem(_ref2) {\n  var item = _ref2.item,\n    onItemLongPress = _ref2.onItemLongPress,\n    onItemPress = _ref2.onItemPress,\n    _ref2$selectedItems = _ref2.selectedItems,\n    selectedItems = _ref2$selectedItems === void 0 ? null : _ref2$selectedItems,\n    _ref2$type = _ref2.type,\n    type = _ref2$type === void 0 ? 0 : _ref2$type,\n    _ref2$handlePrevCard = _ref2.handlePrevCard,\n    handlePrevCard = _ref2$handlePrevCard === void 0 ? null : _ref2$handlePrevCard,\n    _ref2$handleTick = _ref2.handleTick,\n    handleTick = _ref2$handleTick === void 0 ? null : _ref2$handleTick,\n    _ref2$handleNextCard = _ref2.handleNextCard,\n    handleNextCard = _ref2$handleNextCard === void 0 ? null : _ref2$handleNextCard;\n  var adverbs = item.means.filter(function (x) {\n    return x.type === 'zf.';\n  });\n  var nouns = item.means.filter(function (x) {\n    return x.type === 'i.';\n  });\n  var adjectives = item.means.filter(function (x) {\n    return x.type === 's.';\n  });\n  var pronouns = item.means.filter(function (x) {\n    return x.type === 'zm.';\n  });\n  var verbs = item.means.filter(function (x) {\n    return x.type === 'f.';\n  });\n  return _jsx(_Fragment, {\n    children: _jsxs(TouchableOpacity, {\n      style: [styles.listItem, {\n        marginVertical: 5,\n        marginHorizontal: 10,\n        backgroundColor: selectedItems != null && selectedItems.includes(item.id) ? '#ddd' : '#fff',\n        width: '95%'\n      }],\n      onLongPress: function onLongPress() {\n        return onItemLongPress(item.id);\n      },\n      onPress: function onPress() {\n        return onItemPress(item.id);\n      },\n      children: [type === 1 ? _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          left: 0,\n          right: 0,\n          zIndex: 2,\n          marginBottom: 5,\n          borderColor: '#e0e0e0',\n          backgroundColor: '#f5f5f5',\n          borderWidth: 1,\n          padding: 5,\n          borderRadius: 5\n        },\n        children: [_jsx(TouchableOpacity, {\n          onPress: handlePrevCard,\n          children: _jsx(Icon, {\n            name: \"caret-left\",\n            size: 30,\n            color: \"gray\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: handleTick,\n          children: _jsx(Icon, {\n            name: \"check-circle\",\n            size: 30,\n            color: \"green\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: handleNextCard,\n          children: _jsx(Icon, {\n            name: \"caret-right\",\n            size: 30,\n            color: \"gray\"\n          })\n        })]\n      }) : '', type == 1 ? _jsx(View, {\n        style: styles.wordCard,\n        children: _jsxs(_Fragment, {\n          children: [_jsx(View, {\n            style: styles.wordDetails,\n            children: _jsx(Text, {\n              style: [styles.wordText, {\n                fontSize: 25\n              }],\n              children: item.en\n            })\n          }), _jsx(Ionicons, {\n            name: \"volume-high\",\n            size: 24,\n            color: \"#888\",\n            style: styles.soundIcon,\n            onPress: function onPress() {\n              return speak(item.en);\n            }\n          }), \" \"]\n        })\n      }) : '', item.image != '' ? _jsx(Image, {\n        source: {\n          uri: item.image\n        },\n        style: styles.avatar\n      }) : _jsx(View, {\n        style: styles.avatar,\n        children: _jsxs(View, {\n          style: styles.imagePlaceholder,\n          children: [_jsx(Icon, {\n            name: \"image\",\n            size: 50,\n            color: \"#888\"\n          }), _jsx(Text, {\n            children: \"Resim Yok\"\n          })]\n        })\n      }), _jsx(View, {\n        style: styles.listItemContent,\n        children: _jsxs(View, {\n          style: styles.chatInfo,\n          children: [type == 0 ? _jsx(View, {\n            style: styles.wordCard,\n            children: _jsxs(_Fragment, {\n              children: [_jsx(View, {\n                style: styles.wordDetails,\n                children: _jsx(Text, {\n                  style: styles.wordText,\n                  children: item.en\n                })\n              }), _jsx(Ionicons, {\n                name: \"volume-high\",\n                size: 24,\n                color: \"#888\",\n                style: styles.soundIcon,\n                onPress: function onPress() {\n                  return speak(item.en);\n                }\n              }), \" \"]\n            })\n          }) : '', adverbs.length != 0 ? _jsx(View, {\n            style: styles.wordCard,\n            children: _jsxs(View, {\n              style: styles.wordMains,\n              children: [_jsx(Text, {\n                style: styles.wordMain,\n                children: \"Adverbs : \"\n              }), _jsx(Text, {\n                style: styles.wordMain,\n                children: adverbs.map(function (m, index) {\n                  return _jsxs(\"span\", {\n                    children: [m.mean, index < adverbs.length - 1 ? ',' : '']\n                  }, m.id);\n                })\n              })]\n            })\n          }) : _jsx(_Fragment, {}), nouns.length != 0 ? _jsx(View, {\n            style: styles.wordCard,\n            children: _jsxs(View, {\n              style: styles.wordMains,\n              children: [_jsx(Text, {\n                style: styles.wordMain,\n                children: \"Noun : \"\n              }), _jsx(Text, {\n                style: styles.wordMain,\n                children: nouns.map(function (m, index) {\n                  return _jsxs(\"span\", {\n                    children: [m.mean, index < nouns.length - 1 ? ',' : '']\n                  }, m.id);\n                })\n              })]\n            })\n          }) : _jsx(_Fragment, {}), adjectives.length != 0 ? _jsx(View, {\n            style: styles.wordCard,\n            children: _jsxs(View, {\n              style: styles.wordMains,\n              children: [_jsx(Text, {\n                style: styles.wordMain,\n                children: \"Adjective : \"\n              }), _jsx(Text, {\n                style: styles.wordMain,\n                children: adjectives.map(function (m, index) {\n                  return _jsxs(\"span\", {\n                    children: [m.mean, index < adjectives.length - 1 ? ',' : '']\n                  }, m.id);\n                })\n              })]\n            })\n          }) : _jsx(_Fragment, {}), pronouns.length != 0 ? _jsx(View, {\n            style: styles.wordCard,\n            children: _jsxs(View, {\n              style: styles.wordMains,\n              children: [_jsx(Text, {\n                style: styles.wordMain,\n                children: \"Pronoun : \"\n              }), _jsx(Text, {\n                style: styles.wordMain,\n                children: pronouns.map(function (m, index) {\n                  return _jsxs(\"span\", {\n                    children: [m.mean, index < pronouns.length - 1 ? ',' : '']\n                  }, m.id);\n                })\n              })]\n            })\n          }) : _jsx(_Fragment, {}), verbs.length != 0 ? _jsx(View, {\n            style: styles.wordCard,\n            children: _jsxs(View, {\n              style: styles.wordMains,\n              children: [_jsx(Text, {\n                style: styles.wordMain,\n                children: \"Verb : \"\n              }), _jsx(Text, {\n                style: styles.wordMain,\n                children: verbs.map(function (m, index) {\n                  return _jsxs(\"span\", {\n                    children: [m.mean, index < verbs.length - 1 ? ',' : '']\n                  }, m.id);\n                })\n              })]\n            })\n          }) : _jsx(_Fragment, {}), item.examples.length != 0 ? _jsx(View, {\n            style: [styles.wordCard, {\n              backgroundColor: '#b4e0ff',\n              borderRadius: 5,\n              marginTop: 4,\n              textAlign: \"center\"\n            }],\n            children: _jsxs(View, {\n              children: [_jsx(Text, {\n                style: {\n                  textAlign: \"left\",\n                  marginTop: 4,\n                  marginBottom: 4,\n                  marginLeft: 10\n                },\n                children: \"Examples :\"\n              }), item.examples.map(function (m, index) {\n                return _jsx(View, {\n                  style: [styles.wordMains, {\n                    marginTop: 4,\n                    marginBottom: 4,\n                    marginLeft: 10\n                  }],\n                  children: _jsxs(Text, {\n                    children: [_jsx(FontAwesome, {\n                      name: \"circle\",\n                      size: 10,\n                      color: \"#000\",\n                      style: {\n                        marginRight: 5\n                      }\n                    }), \" \", _jsx(Text, {\n                      style: [styles.exampleSentence, {\n                        lineHeight: '2px'\n                      }],\n                      children: m.name\n                    })]\n                  })\n                }, m.id);\n              })]\n            })\n          }) : _jsx(_Fragment, {})]\n        })\n      })]\n    })\n  });\n};\nvar handleAddItem = function handleAddItem(newItem) {\n  setChats(function (prevChats) {\n    return [].concat(_toConsumableArray(prevChats), [newItem]);\n  });\n};\nvar MatchCarts = function MatchCarts(_ref3) {\n  var cards = _ref3.cards,\n    onGameComplete = _ref3.onGameComplete;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    shuffledCards = _useState2[0],\n    setShuffledCards = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    shuffledCardstr = _useState4[0],\n    setShuffledCardstr = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedCardIndices = _useState6[0],\n    setSelectedCardIndices = _useState6[1];\n  var _useState7 = useState(Array(cards.length).fill(false)),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isMatched = _useState8[0],\n    setIsMatched = _useState8[1];\n  useEffect(function () {\n    var shuffled = shuffleArray(cards);\n    setShuffledCards(shuffled);\n    var shuffledtr = shuffleArray(cards);\n    setShuffledCardstr(shuffledtr);\n    setSelectedCardIndices([]);\n    setIsMatched(Array(shuffled.length).fill(false));\n  }, [cards]);\n  var shuffleArray = function shuffleArray(array) {\n    var shuffled = array.slice();\n    for (var i = shuffled.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var _ref4 = [shuffled[j], shuffled[i]];\n      shuffled[i] = _ref4[0];\n      shuffled[j] = _ref4[1];\n    }\n    return shuffled;\n  };\n  var handleCardClick = function handleCardClick(card) {\n    if (selectedCardIndices.length < 2 && !isMatched[card]) {\n      selectedCardIndices[0] = card;\n      setSelectedCardIndices(selectedCardIndices);\n    }\n  };\n  var handleCardClickTr = function handleCardClickTr(card) {\n    if (selectedCardIndices.length < 2 && !isMatched[card]) {\n      selectedCardIndices[1] = card;\n      setSelectedCardIndices(selectedCardIndices);\n    }\n  };\n  useEffect(function () {\n    if (selectedCardIndices.length === 2) {\n      var _selectedCardIndices = _slicedToArray(selectedCardIndices, 2),\n        index1 = _selectedCardIndices[0],\n        index2 = _selectedCardIndices[1];\n      console.log(index1);\n      console.log(index2);\n      if (index1 === index2) {\n        var idx1 = shuffledCards.findIndex(function (k) {\n          return k === index1;\n        });\n        shuffledCards[idx1].status = true;\n        setShuffledCards(shuffledCards);\n        var idx2 = shuffledCardstr.findIndex(function (k) {\n          return k === index1;\n        });\n        shuffledCardstr[idx2].status = true;\n        setShuffledCardstr(shuffledCardstr);\n      }\n      console.log(shuffledCardstr);\n      setSelectedCardIndices([]);\n    }\n  }, [selectedCardIndices, shuffledCards]);\n  return _jsxs(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      gap: '10px'\n    },\n    children: [_jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: shuffledCards.map(function (card, index) {\n        return _jsx(\"div\", {\n          style: {\n            width: '100px',\n            height: '100px',\n            border: '1px solid #ddd',\n            padding: '10px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginBottom: 4,\n            cursor: isMatched[index] ? 'not-allowed' : 'pointer',\n            backgroundColor: isMatched[index] ? '#aaffaa' : '#fff'\n          },\n          onClick: function onClick() {\n            return handleCardClick(card);\n          },\n          children: _jsx(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: card.status ? '✔️' : card.en + ' ' + card.id\n          })\n        }, index);\n      })\n    }), _jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: shuffledCardstr.map(function (card, index) {\n        return _jsx(\"div\", {\n          style: {\n            width: '100px',\n            height: '100px',\n            border: '1px solid #ddd',\n            marginLeft: '5px',\n            padding: '10px',\n            display: 'flex',\n            marginBottom: 4,\n            justifyContent: 'center',\n            alignItems: 'center',\n            cursor: isMatched[index] ? 'not-allowed' : 'pointer',\n            backgroundColor: isMatched[index] ? '#aaffaa' : '#fff'\n          },\n          onClick: function onClick() {\n            return handleCardClick(card);\n          },\n          children: _jsx(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: card.status ? '✔️' : card.means[0].mean + ' ' + card.id\n          })\n        }, index);\n      })\n    })]\n  });\n};\nvar ChatsScreen = function ChatsScreen(_ref5) {\n  var _onItemLongPress = _ref5.onItemLongPress,\n    _onItemPress = _ref5.onItemPress,\n    isMultiSelectMode = _ref5.isMultiSelectMode,\n    selectedItems = _ref5.selectedItems,\n    _ref5$type = _ref5.type,\n    type = _ref5$type === void 0 ? 0 : _ref5$type;\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    dropmodalVisible = _useState10[0],\n    setdropModalVisible = _useState10[1];\n  var DropdownMenu = function DropdownMenu(_ref6) {\n    var isVisible = _ref6.isVisible,\n      onClose = _ref6.onClose;\n    if (!isVisible) return null;\n    return _jsx(View, {\n      style: styles.dropdownContainer,\n      children: _jsxs(_Fragment, {\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handleModalVisible(3);\n          },\n          children: _jsx(Text, {\n            style: styles.dropdownItem,\n            children: \"Basic Review\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handleModalVisible(4);\n          },\n          children: _jsx(Text, {\n            style: styles.dropdownItem,\n            children: \"Multiple Answers\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handleModalVisible(5);\n          },\n          children: _jsx(Text, {\n            style: styles.dropdownItem,\n            children: \"Match Carts\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return onClose();\n          },\n          children: _jsx(Text, {\n            style: styles.dropdownItem,\n            children: \"Writing Review\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return onClose();\n          },\n          children: _jsx(Text, {\n            style: styles.dropdownItem,\n            children: \"Audio Player\"\n          })\n        })]\n      })\n    });\n  };\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isModalVisible = _useState12[0],\n    setModalVisible = _useState12[1];\n  var handleAddItem = function handleAddItem() {\n    var newItem = {\n      id: '3',\n      en: 'newWord',\n      means: [{\n        mean: 'yeni',\n        type: 'zf.'\n      }, {\n        mean: 'eklenen',\n        type: 'zf.'\n      }, {\n        mean: 'kelime',\n        type: 'zf.'\n      }],\n      examples: [{\n        name: 'it is new'\n      }, {\n        name: 'she is added'\n      }],\n      image: 'https://example.com/newImage.jpg'\n    };\n    onAddItem(newItem);\n    setModalVisible(false);\n  };\n  var handleModalVisible = function handleModalVisible(type) {\n    handleDropModalVisible();\n    setModalVisible(true);\n    setisPageType(type);\n  };\n  var handleDropModalVisible = function handleDropModalVisible() {\n    setdropModalVisible(!dropmodalVisible);\n  };\n  var WorkItem = function WorkItem(_ref7) {\n    var onAddItem = _ref7.onAddItem;\n    return _jsx(_Fragment, {\n      children: _jsx(TouchableOpacity, {\n        style: styles.addItemButton,\n        onPress: handleDropModalVisible,\n        children: _jsx(View, {\n          style: styles.buttonContent,\n          children: _jsxs(Text, {\n            children: [_jsx(Ionicons, {\n              name: \"play\",\n              size: 24,\n              color: \"orange\"\n            }), _jsx(Text, {\n              style: styles.addItemText,\n              children: \"Al\\u0131\\u015Ft\\u0131rma Yap\"\n            })]\n          })\n        })\n      })\n    });\n  };\n  var _useState13 = useState(0),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isPageType = _useState14[0],\n    setisPageType = _useState14[1];\n  var _useState15 = useState(0),\n    _useState16 = _slicedToArray(_useState15, 2),\n    currentCardIndex = _useState16[0],\n    setCurrentCardIndex = _useState16[1];\n  var panResponder = React.useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderMove: function onPanResponderMove(_, gestureState) {\n      if (gestureState.dx > 50 && gestureState.vx > 0.5) {\n        handleNextCard();\n      } else if (gestureState.dx < -50 && gestureState.vx < -0.5) {\n        handlePrevCard();\n      }\n    },\n    onPanResponderRelease: function onPanResponderRelease() {}\n  })).current;\n  var handleNextCard = function handleNextCard() {\n    if (currentCardIndex < chats.length - 1) {\n      setCurrentCardIndex(function (prevIndex) {\n        return prevIndex + 1;\n      });\n    } else {\n      setCurrentCardIndex(0);\n    }\n  };\n  var handleTick = function handleTick() {\n    if (currentCardIndex < chats.length - 1) {\n      setCurrentCardIndex(function (prevIndex) {\n        return prevIndex + 1;\n      });\n    } else {\n      setCurrentCardIndex(0);\n    }\n  };\n  var handlePrevCard = function handlePrevCard() {\n    if (currentCardIndex > 0) {\n      setCurrentCardIndex(function (prevIndex) {\n        return prevIndex - 1;\n      });\n    } else {\n      setCurrentCardIndex(chats.length - 1);\n    }\n  };\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    gameCompleted = _useState18[0],\n    setGameCompleted = _useState18[1];\n  var handleGameComplete = function handleGameComplete() {\n    setGameCompleted(true);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(DropdownMenu, {\n      isVisible: dropmodalVisible,\n      onClose: function onClose() {\n        return setdropModalVisible(false);\n      }\n    }), _jsxs(View, {\n      style: styles.addItemContainer,\n      children: [isPageType === 0 ? _jsxs(_Fragment, {\n        children: [_jsx(TouchableOpacity, {\n          style: styles.addItemButton,\n          onPress: function onPress() {\n            return setisPageType(1);\n          },\n          children: _jsx(View, {\n            style: styles.buttonContent,\n            children: _jsxs(Text, {\n              children: [_jsx(Ionicons, {\n                name: \"add\",\n                size: 24,\n                color: \"green\"\n              }), _jsx(Text, {\n                style: styles.addItemText,\n                children: \"Yeni Kart Ekle\"\n              })]\n            })\n          })\n        }), _jsx(View, {\n          style: {\n            zIndex: 10\n          },\n          children: _jsx(WorkItem, {\n            onAddItem: handleAddItem\n          })\n        })]\n      }) : _jsx(_Fragment, {}), isPageType === 1 ? _jsxs(_Fragment, {\n        children: [_jsx(TouchableOpacity, {\n          style: styles.addItemButton,\n          onPress: function onPress() {\n            return setisPageType(0);\n          },\n          children: _jsx(View, {\n            style: styles.buttonContent,\n            children: _jsxs(Text, {\n              children: [_jsx(Ionicons, {\n                name: \"list\",\n                size: 24,\n                color: \"green\"\n              }), _jsx(Text, {\n                style: styles.addItemText,\n                children: \"T\\xFCm Kart Listesi\"\n              })]\n            })\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.addItemButton,\n          onPress: function onPress() {\n            return setisPageType(2);\n          },\n          children: _jsx(View, {\n            style: styles.buttonContent,\n            children: _jsxs(Text, {\n              children: [_jsx(Ionicons, {\n                name: \"document\",\n                size: 24,\n                color: \"blue\"\n              }), _jsx(Text, {\n                style: styles.addItemText,\n                children: \"Kart Gruplar\\u0131\"\n              })]\n            })\n          })\n        })]\n      }) : _jsx(_Fragment, {}), isPageType === 2 ? _jsxs(_Fragment, {\n        children: [_jsx(TouchableOpacity, {\n          style: styles.addItemButton,\n          onPress: function onPress() {\n            return setisPageType(0);\n          },\n          children: _jsx(View, {\n            style: styles.buttonContent,\n            children: _jsxs(Text, {\n              children: [_jsx(Ionicons, {\n                name: \"list\",\n                size: 24,\n                color: \"green\"\n              }), _jsx(Text, {\n                style: styles.addItemText,\n                children: \"T\\xFCm Kart Listesi\"\n              })]\n            })\n          })\n        }), _jsx(_Fragment, {\n          children: _jsx(TouchableOpacity, {\n            style: styles.addItemButton,\n            onPress: function onPress() {\n              return setisPageType(1);\n            },\n            children: _jsx(View, {\n              style: styles.buttonContent,\n              children: _jsxs(Text, {\n                children: [_jsx(Ionicons, {\n                  name: \"add\",\n                  size: 24,\n                  color: \"green\"\n                }), _jsx(Text, {\n                  style: styles.addItemText,\n                  children: \"Yeni Kart Ekle\"\n                })]\n              })\n            })\n          })\n        })]\n      }) : _jsx(_Fragment, {}), isPageType === 3 || isPageType === 4 || isPageType === 5 ? _jsxs(_Fragment, {\n        children: [_jsx(TouchableOpacity, {\n          style: styles.addItemButton,\n          onPress: function onPress() {\n            return setisPageType(0);\n          },\n          children: _jsx(View, {\n            style: styles.buttonContent,\n            children: _jsxs(Text, {\n              children: [_jsx(Ionicons, {\n                name: \"list\",\n                size: 24,\n                color: \"green\"\n              }), _jsx(Text, {\n                style: styles.addItemText,\n                children: \"T\\xFCm Kart Listesi\"\n              })]\n            })\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.addItemButton,\n          onPress: function onPress() {\n            return setisPageType(1);\n          },\n          children: _jsx(View, {\n            style: styles.buttonContent,\n            children: _jsxs(Text, {\n              children: [_jsx(Ionicons, {\n                name: \"add\",\n                size: 24,\n                color: \"green\"\n              }), _jsx(Text, {\n                style: styles.addItemText,\n                children: \"Yeni Kart Ekle\"\n              })]\n            })\n          })\n        })]\n      }) : _jsx(_Fragment, {})]\n    }), isPageType === 1 ? _jsx(AddItemFormComponent, {}) : _jsx(_Fragment, {}), isPageType === 2 ? _jsx(AddGroupFormComponent, {}) : _jsx(_Fragment, {}), isPageType === 0 ? _jsx(FlatList, {\n      data: chats,\n      renderItem: function renderItem(_ref8) {\n        var item = _ref8.item;\n        return _jsx(ChatItem, {\n          item: item,\n          onItemLongPress: function onItemLongPress() {\n            return _onItemLongPress(item.id);\n          },\n          onItemPress: function onItemPress() {\n            return _onItemPress(item.id);\n          },\n          selectedItems: selectedItems,\n          type: 0\n        }, item.id);\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      style: styles.flatList\n    }) : _jsx(_Fragment, {}), isPageType === 3 ? _jsx(View, _objectSpread(_objectSpread({\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      }\n    }, panResponder.panHandlers), {}, {\n      children: _jsx(ChatItem, {\n        item: chats[currentCardIndex],\n        onItemLongPress: function onItemLongPress() {\n          return _onItemLongPress(chats[currentCardIndex]);\n        },\n        onItemPress: function onItemPress() {\n          return _onItemPress(chats[currentCardIndex]);\n        },\n        type: 1,\n        handlePrevCard: handlePrevCard,\n        handleTick: handleTick,\n        handleNextCard: handleNextCard\n      }, chats[currentCardIndex].id)\n    })) : '', isPageType === 4 ? _jsxs(ScrollView, _objectSpread(_objectSpread({\n      style: {\n        flex: 1\n      },\n      contentContainerStyle: {\n        justifyContent: 'center',\n        alignItems: 'center'\n      }\n    }, panResponder.panHandlers), {}, {\n      children: [_jsx(MultipleAnswer, {\n        item: chats[currentCardIndex],\n        onItemLongPress: function onItemLongPress() {\n          return _onItemLongPress(chats[currentCardIndex]);\n        },\n        onItemPress: function onItemPress() {\n          return _onItemPress(chats[currentCardIndex]);\n        },\n        type: 1,\n        handlePrevCard: handlePrevCard,\n        handleTick: handleTick,\n        handleNextCard: handleNextCard,\n        chats: chats\n      }, chats[currentCardIndex].id), _jsx(\"table\", {\n        style: {\n          borderCollapse: 'collapse',\n          marginBottom: 10\n        },\n        children: _jsx(\"tbody\", {\n          children: Array.from({\n            length: Math.ceil(chats.length / 10)\n          }, function (_, groupIndex) {\n            return _jsx(\"tr\", {\n              children: chats.slice(groupIndex * 10, (groupIndex + 1) * 10).map(function (option, index) {\n                return _jsx(\"td\", {\n                  children: _jsx(\"div\", {\n                    style: {\n                      width: '25px',\n                      height: '25px',\n                      border: index + groupIndex * 10 === currentCardIndex ? '1px solid #000' : '1px solid #ddd',\n                      padding: '8px',\n                      background: 'white',\n                      boxSizing: 'border-box'\n                    }\n                  })\n                }, index);\n              })\n            }, groupIndex);\n          })\n        })\n      })]\n    })) : '', isPageType === 5 ? _jsx(\"div\", {\n      children: _jsx(MatchCarts, {\n        cards: chats,\n        onGameComplete: handleGameComplete\n      })\n    }) : _jsx(_Fragment, {})]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  buttonContent: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  addItemButton: {\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#e0e0e0',\n    borderRadius: 10,\n    marginBottom: 10,\n    marginTop: 10,\n    alignItems: 'center'\n  },\n  addItemText: {\n    fontSize: 15,\n    fontWeight: 'bold'\n  },\n  addItemContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: 10,\n    paddingVertical: 5\n  },\n  flatList: {\n    flex: 1,\n    zIndex: 4\n  },\n  listItem: {\n    padding: 15,\n    borderWidth: 1,\n    borderColor: '#e0e0e0',\n    borderRadius: 10,\n    marginBottom: 10\n  },\n  listItemContent: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  avatar: {\n    width: '100%',\n    height: 200,\n    marginRight: 0,\n    borderRadius: 10\n  },\n  chatInfo: {\n    flex: 1\n  },\n  wordCard: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 10\n  },\n  wordMains: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginLeft: 10\n  },\n  wordMain: {\n    marginRight: 5\n  },\n  wordDetails: {\n    flex: 1,\n    marginLeft: 10\n  },\n  wordText: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  soundIcon: {\n    marginLeft: 5\n  },\n  wordType: {\n    fontSize: 14,\n    color: '#888'\n  },\n  exampleSentence: {\n    marginTop: 4,\n    fontSize: 14,\n    color: '#555'\n  },\n  buttonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    zIndex: 8\n  },\n  addItemButton: {\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#e0e0e0',\n    borderRadius: 10,\n    marginBottom: 10,\n    marginTop: 10,\n    alignItems: 'center',\n    zIndex: 8\n  },\n  addItemText: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    zIndex: 8\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n    zIndex: 8\n  },\n  modalTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    zIndex: 8\n  },\n  addButton: {\n    backgroundColor: '#4CAF50',\n    padding: 10,\n    borderRadius: 5,\n    marginVertical: 10,\n    zIndex: 8\n  },\n  addButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    zIndex: 8\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 20,\n    right: 20,\n    zIndex: 1\n  },\n  dropdownContainer: {\n    position: 'absolute',\n    top: 70,\n    right: 10,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    elevation: 5,\n    padding: 5,\n    zIndex: 10\n  },\n  dropdownItem: {\n    padding: 10\n  },\n  imagePlaceholder: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ddd',\n    borderRadius: 10\n  }\n});\nexport default ChatsScreen;","map":{"version":3,"names":["React","useState","useEffect","Ionicons","View","Text","FlatList","StyleSheet","TouchableOpacity","Modal","PanResponder","Image","ScrollView","FontAwesome","AddItemFormComponent","AddGroupFormComponent","Speech","Icon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","chats","id","en","means","mean","type","examples","name","image","speak","text","MultipleAnswer","_ref","item","onItemLongPress","onItemPress","_ref$selectedItems","selectedItems","_ref$type","_ref$handlePrevCard","handlePrevCard","_ref$handleTick","handleTick","_ref$handleNextCard","handleNextCard","_ref$chats","adverbs","filter","x","nouns","adjectives","pronouns","verbs","getRandomMeaning","randomIndex","Math","floor","random","length","map","join","generateRandomOptions","correctMeaning","min","max","randomNumber","options","option","meaning","randomOptions","children","style","styles","listItem","marginVertical","marginHorizontal","backgroundColor","includes","width","flexDirection","justifyContent","alignItems","left","right","zIndex","marginBottom","borderColor","borderWidth","padding","borderRadius","onPress","size","color","source","uri","avatar","imagePlaceholder","wordCard","wordDetails","wordText","fontSize","soundIcon","listItemContent","chatInfo","marginTop","textAlign","marginLeft","index","marginRight","fontWeight","ChatItem","_ref2","_ref2$selectedItems","_ref2$type","_ref2$handlePrevCard","_ref2$handleTick","_ref2$handleNextCard","onLongPress","wordMains","wordMain","m","exampleSentence","lineHeight","handleAddItem","newItem","setChats","prevChats","concat","_toConsumableArray","MatchCarts","_ref3","cards","onGameComplete","_useState","_useState2","_slicedToArray","shuffledCards","setShuffledCards","_useState3","_useState4","shuffledCardstr","setShuffledCardstr","_useState5","_useState6","selectedCardIndices","setSelectedCardIndices","_useState7","Array","fill","_useState8","isMatched","setIsMatched","shuffled","shuffleArray","shuffledtr","array","slice","i","j","_ref4","handleCardClick","card","handleCardClickTr","_selectedCardIndices","index1","index2","console","log","idx1","findIndex","k","status","idx2","display","gap","height","border","cursor","onClick","ChatsScreen","_ref5","isMultiSelectMode","_ref5$type","_useState9","_useState10","dropmodalVisible","setdropModalVisible","DropdownMenu","_ref6","isVisible","onClose","dropdownContainer","handleModalVisible","dropdownItem","_useState11","_useState12","isModalVisible","setModalVisible","onAddItem","handleDropModalVisible","setisPageType","WorkItem","_ref7","addItemButton","buttonContent","addItemText","_useState13","_useState14","isPageType","_useState15","_useState16","currentCardIndex","setCurrentCardIndex","panResponder","useRef","create","onStartShouldSetPanResponder","onPanResponderMove","_","gestureState","dx","vx","onPanResponderRelease","current","prevIndex","_useState17","_useState18","gameCompleted","setGameCompleted","handleGameComplete","container","addItemContainer","data","renderItem","_ref8","keyExtractor","flatList","_objectSpread","flex","panHandlers","contentContainerStyle","borderCollapse","from","ceil","groupIndex","background","boxSizing","paddingHorizontal","paddingVertical","flexWrap","wordType","modalContainer","modalTitle","addButton","addButtonText","closeButton","position","top","elevation"],"sources":["D:/react-native-uygulamalarım/wordbook/component/ChatsScreen.jsx"],"sourcesContent":["import React, { useState,useEffect  } from 'react';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { View, Text, FlatList, StyleSheet, TouchableOpacity, Modal, PanResponder } from 'react-native';\r\nimport { Image, ScrollView } from 'react-native';\r\nimport FontAwesome from 'react-native-vector-icons/FontAwesome'; // FontAwesome eklenen kütüphanenin ismi\r\nimport AddItemFormComponent from './AddItemFormComponent'; // AddItem component'ının olduğu dosya yolu\r\nimport AddGroupFormComponent from './AddGroupFormComponent'; // AddItem component'ının olduğu dosya yolu\r\n// import WorkItem from './WorkItem'; // AddItem component'ının olduğu dosya yolu\r\nimport * as Speech from 'expo-speech';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\n\r\nconst chats = [\r\n    {\r\n        id: 13, en: 'about', means: [\r\n            { mean: 'hemen hemen', type: 'zf.', id: 1 },\r\n            { mean: 'aşağı yukarı', type: 'zf.', id: 2 },\r\n            { mean: 'yaklaşık', type: 'zf.', id: 3 },\r\n        ],\r\n        examples: [{ name: 'it is about', id: 1 }, { name: 'she is about', id: 2 }]\r\n        , image: 'https://images-na.ssl-images-amazon.com/images/S/pv-target-images/ae4816cade1a5b7f29787d0b89610132c72c7747041481c6619b9cc3302c0101._RI_TTW_.jpg'\r\n    },\r\n    {\r\n        id: 14, en: 'above', means: [\r\n            { mean: 'üzerine', type: 'zf.', id: 4 },\r\n            { mean: 'yukarısında', type: 'zf.', id: 5 },\r\n            { mean: 'yukarıda', type: 'zf.', id: 6 },\r\n        ],\r\n        examples: [{ name: 'it is above', id: 3 }, { name: 'she is above', id: 4 }]\r\n        , image: 'https://images-na.ssl-images-amazon.com/images/S/pv-target-images/ae4816cade1a5b7f29787d0b89610132c72c7747041481c6619b9cc3302c0101._RI_TTW_.jpg'\r\n    },\r\n\r\n    {\r\n        id: 15, en: 'action', means: [\r\n            { mean: 'çalışma', type: 'i.', id: 7 },\r\n            { mean: 'davranış', type: 'i.', id: 8 },\r\n            { mean: 'aksiyon', type: 'i.', id: 9 },\r\n        ],\r\n        examples: [{ name: 'it is action', id: 5 }, { name: 'she is action', id: 6 }]\r\n        , image: 'https://images-na.ssl-images-amazon.com/images/S/pv-target-images/ae4816cade1a5b7f29787d0b89610132c72c7747041481c6619b9cc3302c0101._RI_TTW_.jpg'\r\n    },\r\n    {\r\n        id: 16, en: 'above', means: [\r\n            { mean: 'üzerine', type: 'zf.', id: 10 },\r\n            { mean: 'yukarısında', type: 'zf.', id: 11 },\r\n            { mean: 'yukarıda', type: 'zf.', id: 12 },\r\n        ],\r\n        examples: [{ name: 'it is above', id: 7 }, { name: 'she is above', id: 8 }]\r\n        , image: ''\r\n    },\r\n\r\n\r\n    // ... Diğer sohbetler\r\n];\r\n\r\nconst speak = (text) => {\r\n    Speech.speak(text);\r\n};\r\n\r\nconst MultipleAnswer = ({ item, onItemLongPress, onItemPress, selectedItems = null, type = 0, handlePrevCard = null, handleTick = null, handleNextCard = null, chats = null }) => {\r\n    const adverbs = item.means.filter(x => x.type === 'zf.');\r\n    const nouns = item.means.filter(x => x.type === 'i.');\r\n    const adjectives = item.means.filter(x => x.type === 's.');\r\n    const pronouns = item.means.filter(x => x.type === 'zm.');\r\n    const verbs = item.means.filter(x => x.type === 'f.');\r\n\r\n    // Rasgele seçilen bir kelimenin Türkçe anlamını bulma fonksiyonu\r\n    const getRandomMeaning = () => {\r\n        const randomIndex = Math.floor(Math.random() * chats.length);\r\n        if (chats[randomIndex].en === item.en) {\r\n            getRandomMeaning();\r\n        }\r\n        return chats[randomIndex].means.map(mean => mean.mean).join(', '); // Burada sadece ilk anlamı alıyoruz, dilerseniz farklı bir anlamı da seçebilirsiniz.\r\n    };\r\n\r\n    // Rasgele şıkları oluşturma\r\n    const generateRandomOptions = () => {\r\n        const correctMeaning = item.means.map(mean => mean.mean).join(', '); // Doğru cevap\r\n        const min = 0;\r\n        const max = 5; // Bu değer max değerine dahil olmayacak, yani 4'e kadar olan sayıları içerecek.\r\n\r\n        const randomNumber = Math.floor(Math.random() * (max - min) + min);\r\n\r\n        const options = [\r\n            { option: 'A', meaning: randomNumber == 0 ? correctMeaning : getRandomMeaning() }, // Doğru cevap\r\n            { option: 'B', meaning: randomNumber == 1 ? correctMeaning : getRandomMeaning() }, // Rasgele seçilen bir anlam\r\n            { option: 'C', meaning: randomNumber == 2 ? correctMeaning : getRandomMeaning() }, // Rasgele seçilen bir anlam\r\n            { option: 'D', meaning: randomNumber == 3 ? correctMeaning : getRandomMeaning() }, // Rasgele seçilen bir anlam\r\n            { option: 'E', meaning: randomNumber == 4 ? correctMeaning : getRandomMeaning() }, // Rasgele seçilen bir anlam\r\n            // Daha fazla şık ekleyebilirsiniz\r\n        ];\r\n\r\n        // Şıkları karıştırma\r\n        return options;\r\n    };\r\n\r\n    const randomOptions = generateRandomOptions();\r\n\r\n    return (\r\n        <>\r\n            <View\r\n                style={[\r\n                    styles.listItem,\r\n                    {\r\n                        marginVertical: 5,\r\n                        marginHorizontal: 10,\r\n                        backgroundColor: selectedItems != null && selectedItems.includes(item.id) ? '#ddd' : '#fff',\r\n                        width: '95%'\r\n                    },\r\n                ]}\r\n            >\r\n                {type === 1 ? (\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            alignItems: 'center',\r\n                            left: 0,\r\n                            right: 0,\r\n                            zIndex: 2,\r\n                            marginBottom: 5,\r\n                            borderColor: '#e0e0e0',\r\n                            backgroundColor: '#f5f5f5',\r\n                            borderWidth: 1,\r\n                            padding: 5,\r\n                            borderRadius: 5\r\n                        }}\r\n                    >\r\n                        <TouchableOpacity onPress={handlePrevCard}>\r\n                            <Icon name=\"caret-left\" size={30} color=\"gray\" />\r\n                        </TouchableOpacity>\r\n\r\n                        <TouchableOpacity onPress={handleTick}>\r\n                            <View style={{\r\n                                flexDirection: 'row',\r\n                                justifyContent: 'space-between',\r\n                                alignItems: 'center',\r\n                                left: 0,\r\n                                right: 0,\r\n                                zIndex: 2,\r\n                                borderColor: '#e0e0e0',\r\n                                backgroundColor: 'green',\r\n                                borderWidth: 1,\r\n                                padding: 5,\r\n                                borderRadius: 5,\r\n                                color: 'white'\r\n                            }}>\r\n                                <Icon name=\"check\" size={25} color=\"white\" />\r\n                                <Text size={30} color=\"green\" />Öğrendim<Text />\r\n                            </View>\r\n\r\n                        </TouchableOpacity>\r\n\r\n                        <TouchableOpacity onPress={handleNextCard}>\r\n                            <Icon name=\"caret-right\" size={30} color=\"gray\" />\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                ) : ''}\r\n                {item.image != '' ? <Image source={{ uri: item.image }} style={styles.avatar} /> :\r\n                    <View style={styles.avatar}>\r\n                        <View style={styles.imagePlaceholder}>\r\n                            <Icon name=\"image\" size={50} color=\"#888\" />\r\n                            <Text>Resim Yok</Text>\r\n                        </View>\r\n                    </View>}\r\n                {type === 1 ? (\r\n                    <View style={styles.wordCard}>\r\n                        <>\r\n                            <View style={styles.wordDetails}>\r\n                                <Text style={[styles.wordText, { fontSize: 25 }]}>{item.en}</Text>\r\n                            </View>\r\n                            <Ionicons name=\"volume-high\" size={24} color=\"#888\" style={styles.soundIcon} onPress={() => speak(item.en)} /> </>\r\n                    </View>\r\n                ) : ''}\r\n\r\n                <View style={styles.listItemContent}>\r\n\r\n                    <View style={styles.chatInfo}>\r\n                        {type === 0 ? <View style={styles.wordCard}>\r\n                            <>\r\n                                <View style={styles.wordDetails}>\r\n                                    <Text style={styles.wordText}>{item.en}</Text>\r\n                                </View>\r\n                                <Ionicons name=\"volume-high\" size={24} color=\"#888\" style={styles.soundIcon} onPress={() => speak(item.en)} /> </>\r\n                        </View> : ''}\r\n                        <View style={[styles.wordCard, { marginTop: 4, textAlign: \"center\" }]}>\r\n                            <View >\r\n                                <Text style={{ textAlign: \"left\", marginTop: 4, marginBottom: 4, marginLeft: 10 }}>Anlamı aşağıdakilerden hangisidir</Text>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n\r\n                </View>\r\n                {randomOptions.map((option, index) => (\r\n                    <View key={index} style={{ flexDirection: 'row', alignItems: 'center', marginVertical: 4 }}>\r\n                        <Text style={{ marginRight: 8, fontWeight: 'bold' }}>{option.option}:</Text>\r\n                        <Text>{option.meaning}</Text>\r\n                    </View>\r\n                ))}\r\n            </View>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst ChatItem = ({ item, onItemLongPress, onItemPress, selectedItems = null, type = 0, handlePrevCard = null, handleTick = null, handleNextCard = null }) => {\r\n    const adverbs = item.means.filter(x => x.type === 'zf.');\r\n    const nouns = item.means.filter(x => x.type === 'i.');\r\n    const adjectives = item.means.filter(x => x.type === 's.');\r\n    const pronouns = item.means.filter(x => x.type === 'zm.');\r\n    const verbs = item.means.filter(x => x.type === 'f.');\r\n\r\n    // ...\r\n\r\n    return (\r\n        <>\r\n\r\n            <TouchableOpacity\r\n                style={[\r\n                    styles.listItem,\r\n                    {\r\n                        marginVertical: 5,\r\n                        marginHorizontal: 10,\r\n                        backgroundColor: selectedItems != null && selectedItems.includes(item.id) ? '#ddd' : '#fff',\r\n                        width: '95%'\r\n                    },\r\n                ]}\r\n                onLongPress={() => onItemLongPress(item.id)}\r\n                onPress={() => onItemPress(item.id)}\r\n            >\r\n                {type === 1 ? <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',  // Yatayda ve dikeyde ortalamak için eklenen stil\r\n                        left: 0,\r\n                        right: 0,\r\n                        zIndex: 2,\r\n                        marginBottom: 5,\r\n                        borderColor: '#e0e0e0',\r\n                        backgroundColor: '#f5f5f5',\r\n                        borderWidth: 1,\r\n                        padding: 5,\r\n                        borderRadius: 5\r\n                    }}\r\n                >\r\n                    <TouchableOpacity onPress={handlePrevCard}>\r\n                        <Icon name=\"caret-left\" size={30} color=\"gray\" />\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity onPress={handleTick}>\r\n                        <Icon name=\"check-circle\" size={30} color=\"green\" />\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity onPress={handleNextCard}>\r\n                        <Icon name=\"caret-right\" size={30} color=\"gray\" />\r\n                    </TouchableOpacity>\r\n                </View> : ''}\r\n\r\n                {\r\n                    type == 1 ? <View style={styles.wordCard}>\r\n                        <>\r\n                            <View style={styles.wordDetails}>\r\n                                <Text style={[styles.wordText, { fontSize: 25 }]}>{item.en}</Text>\r\n                            </View>\r\n                            <Ionicons name=\"volume-high\" size={24} color=\"#888\" style={styles.soundIcon} onPress={() => speak(item.en)} /> </>\r\n                    </View> : ''\r\n                }\r\n                {item.image != '' ? <Image source={{ uri: item.image }} style={styles.avatar} /> :\r\n                    <View style={styles.avatar}>\r\n                        <View style={styles.imagePlaceholder}>\r\n                            <Icon name=\"image\" size={50} color=\"#888\" />\r\n                            <Text>Resim Yok</Text>\r\n                        </View>\r\n                    </View>}\r\n\r\n                <View style={styles.listItemContent}>\r\n\r\n                    <View style={styles.chatInfo}>\r\n                        {/* İngilizce kelime kartı */}\r\n                        {\r\n                            type == 0 ? <View style={styles.wordCard}>\r\n                                <>\r\n                                    <View style={styles.wordDetails}>\r\n                                        <Text style={styles.wordText}>{item.en}</Text>\r\n                                    </View>\r\n                                    <Ionicons name=\"volume-high\" size={24} color=\"#888\" style={styles.soundIcon} onPress={() => speak(item.en)} /> </>\r\n                            </View>\r\n                                : ''}\r\n                        {adverbs.length != 0 ? <View style={styles.wordCard}>\r\n                            <View style={styles.wordMains}>\r\n                                <Text style={styles.wordMain}>Adverbs : </Text>\r\n                                <Text style={styles.wordMain}>\r\n                                    {adverbs.map((m, index) =>\r\n                                        <span key={m.id}>{m.mean}{index < adverbs.length - 1 ? ',' : ''}</span>\r\n                                    )}\r\n                                </Text>\r\n                            </View>\r\n                        </View> : <></>}\r\n\r\n                        {nouns.length != 0 ?\r\n                            <View style={styles.wordCard}>\r\n                                <View style={styles.wordMains}>\r\n                                    <Text style={styles.wordMain}>Noun : </Text>\r\n                                    <Text style={styles.wordMain}>\r\n                                        {nouns.map((m, index) =>\r\n                                            <span key={m.id}>{m.mean}{index < nouns.length - 1 ? ',' : ''}</span>\r\n                                        )}\r\n                                    </Text>\r\n                                </View>\r\n                            </View>\r\n                            : <></>}\r\n\r\n                        {adjectives.length != 0 ?\r\n                            <View style={styles.wordCard}>\r\n                                <View style={styles.wordMains}>\r\n                                    <Text style={styles.wordMain}>Adjective : </Text>\r\n                                    <Text style={styles.wordMain}>\r\n                                        {adjectives.map((m, index) =>\r\n                                            <span key={m.id}>{m.mean}{index < adjectives.length - 1 ? ',' : ''}</span>\r\n                                        )}\r\n                                    </Text>\r\n                                </View>\r\n                            </View>\r\n                            : <></>}\r\n\r\n\r\n                        {pronouns.length != 0 ?\r\n                            <View style={styles.wordCard}>\r\n                                <View style={styles.wordMains}>\r\n                                    <Text style={styles.wordMain}>Pronoun : </Text>\r\n                                    <Text style={styles.wordMain}>\r\n                                        {pronouns.map((m, index) =>\r\n                                            <span key={m.id}>{m.mean}{index < pronouns.length - 1 ? ',' : ''}</span>\r\n                                        )}\r\n                                    </Text>\r\n                                </View>\r\n                            </View>\r\n                            : <></>}\r\n\r\n                        {verbs.length != 0 ?\r\n                            <View style={styles.wordCard}>\r\n                                <View style={styles.wordMains}>\r\n                                    <Text style={styles.wordMain}>Verb : </Text>\r\n                                    <Text style={styles.wordMain} >\r\n                                        {verbs.map((m, index) =>\r\n                                            <span key={m.id}>{m.mean}{index < verbs.length - 1 ? ',' : ''}</span>\r\n                                        )}\r\n                                    </Text>\r\n                                </View>\r\n                            </View>\r\n                            : <></>}\r\n\r\n                        {item.examples.length != 0 ?\r\n                            <View style={[styles.wordCard, { backgroundColor: '#b4e0ff', borderRadius: 5, marginTop: 4, textAlign: \"center\" }]}>\r\n                                <View >\r\n                                    <Text style={{ textAlign: \"left\", marginTop: 4, marginBottom: 4, marginLeft: 10 }}>Examples :</Text>\r\n                                    {item.examples.map((m, index) => (\r\n                                        <View style={[styles.wordMains, { marginTop: 4, marginBottom: 4, marginLeft: 10 }]} key={m.id}>\r\n                                            <Text>\r\n                                                <FontAwesome name=\"circle\" size={10} color=\"#000\" style={{ marginRight: 5 }} /> {/* Nokta ikonu */}\r\n                                                <Text style={[styles.exampleSentence, { lineHeight: '2px' }]}>{m.name}</Text>\r\n                                            </Text>\r\n                                        </View>\r\n                                    ))}\r\n                                </View>\r\n                            </View>\r\n                            : <></>}\r\n                    </View>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </>\r\n    );\r\n};\r\nconst handleAddItem = (newItem) => {\r\n    // Yeni öğeyi mevcut listeye ekleyin\r\n    setChats((prevChats) => [...prevChats, newItem]);\r\n};\r\n\r\n\r\nconst MatchCarts = ({ cards, onGameComplete }) => {\r\n  const [shuffledCards, setShuffledCards] = useState([]);\r\n  const [shuffledCardstr, setShuffledCardstr] = useState([]);\r\n  const [selectedCardIndices, setSelectedCardIndices] = useState([]);\r\n  const [isMatched, setIsMatched] = useState(Array(cards.length).fill(false));\r\n\r\n  useEffect(() => {\r\n    // Kartları karıştır\r\n    const shuffled = shuffleArray(cards);\r\n    setShuffledCards(shuffled);\r\n    const shuffledtr = shuffleArray(cards);\r\n    setShuffledCardstr(shuffledtr);\r\n    // Eşleşme durumlarını sıfırla\r\n    setSelectedCardIndices([]);\r\n    setIsMatched(Array(shuffled.length).fill(false));\r\n  }, [cards]);\r\n  \r\n\r\n  const shuffleArray = (array) => {\r\n    const shuffled = array.slice();\r\n    for (let i = shuffled.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\r\n    }\r\n    return shuffled;\r\n  };\r\n\r\n  const handleCardClick = (card) => {\r\n    if (selectedCardIndices.length < 2 && !isMatched[card]) {\r\n        selectedCardIndices[0]=card;\r\n      setSelectedCardIndices(selectedCardIndices);\r\n    }\r\n  };\r\n\r\n  const handleCardClickTr = (card) => {\r\n    if (selectedCardIndices.length < 2 && !isMatched[card]) {\r\n        selectedCardIndices[1]=card;\r\n        setSelectedCardIndices(selectedCardIndices);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (selectedCardIndices.length === 2) {\r\n      // Eğer iki kart seçili ise kontrol et ve sıfırla\r\n      \r\n       const [index1, index2] = selectedCardIndices;\r\n       console.log(index1);\r\n       console.log(index2);\r\n      if (index1=== index2) {\r\n        let idx1=shuffledCards.findIndex(k=>k===index1);\r\n        shuffledCards[idx1].status=true;\r\n        setShuffledCards(shuffledCards);\r\n        let idx2=shuffledCardstr.findIndex(k=>k===index1);\r\n        shuffledCardstr[idx2].status=true;\r\n        setShuffledCardstr(shuffledCardstr);\r\n        // Eğer seçilen kartlar aynı çiftin kartları ise işlemleri yap\r\n      }\r\n      console.log(shuffledCardstr);\r\n      setSelectedCardIndices([]);\r\n\r\n    //   if(shuffled!==undefined && shuffled.filter(x=>x.status===true).length===shuffled.length)\r\n    //   {\r\n    //     for(let i=0;i<shuffled.length;i++)\r\n    //     {\r\n    //         shuffled[i].status=false;\r\n    //     }\r\n    //     setShuffledCards(shuffled);\r\n\r\n    //     for(let i=0;i<shuffledtr.length;i++)\r\n    //     {\r\n    //         shuffledtr[i].status=false;\r\n    //     }\r\n    //     setShuffledCardstr(shuffledtr);\r\n\r\n    //   }\r\n\r\n\r\n    }\r\n  }, [selectedCardIndices, shuffledCards]);\r\n\r\n \r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', gap: '10px' }}>\r\n    {/* Sol taraftaki kartlar (shuffledCards) */}\r\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n      {shuffledCards.map((card, index) => (\r\n        <div\r\n          key={index}\r\n          style={{\r\n            width: '100px',\r\n            height: '100px',\r\n            border: '1px solid #ddd',\r\n            padding: '10px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            marginBottom:4,\r\n            cursor: isMatched[index] ? 'not-allowed' : 'pointer',\r\n            backgroundColor: isMatched[index] ? '#aaffaa' : '#fff',\r\n          }}\r\n          onClick={() => handleCardClick(card)}\r\n        >\r\n          <div style={{ textAlign: 'center' }}>{card.status ? '✔️' : card.en + ' ' + card.id}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  \r\n    {/* Sağ taraftaki kartlar (shuffledCardstr) */}\r\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n      {shuffledCardstr.map((card, index) => (\r\n        <div\r\n          key={index}\r\n          style={{\r\n            width: '100px',\r\n            height: '100px',\r\n            border: '1px solid #ddd',\r\n            marginLeft: '5px', // Boşluk eklemek için\r\n            padding: '10px',\r\n            display: 'flex',\r\n            marginBottom:4,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            cursor: isMatched[index] ? 'not-allowed' : 'pointer',\r\n            backgroundColor: isMatched[index] ? '#aaffaa' : '#fff',\r\n          }}\r\n          onClick={() => handleCardClick(card)}\r\n        >\r\n          <div style={{ textAlign: 'center' }}>{card.status ? '✔️' : card.means[0].mean + ' ' + card.id}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n  \r\n\r\n  );\r\n  \r\n};\r\n\r\n\r\n\r\n  \r\n  \r\nconst ChatsScreen = ({ onItemLongPress, onItemPress, isMultiSelectMode, selectedItems, type = 0 }) => {\r\n\r\n    const [dropmodalVisible, setdropModalVisible] = useState(false);\r\n    const DropdownMenu = ({ isVisible, onClose }) => {\r\n        if (!isVisible) return null;\r\n\r\n        return (\r\n            <View style={styles.dropdownContainer}>\r\n                <>\r\n                    <TouchableOpacity onPress={() => handleModalVisible(3)}>\r\n                        <Text style={styles.dropdownItem}>Basic Review</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => handleModalVisible(4)}>\r\n                        <Text style={styles.dropdownItem}>Multiple Answers</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => handleModalVisible(5)}>\r\n                        <Text style={styles.dropdownItem}>Match Carts</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => onClose()}>\r\n                        <Text style={styles.dropdownItem}>Writing Review</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => onClose()}>\r\n                        <Text style={styles.dropdownItem}>Audio Player</Text>\r\n                    </TouchableOpacity>\r\n                </>\r\n            </View>\r\n        );\r\n    };\r\n\r\n    const [isModalVisible, setModalVisible] = useState(false);\r\n    const handleAddItem = () => {\r\n        // Yeni öğe eklemek için gerekli işlemleri gerçekleştirin.\r\n        // Örnek olarak, bir form gösterip kullanıcının girdiği bilgilerle yeni bir öğe oluşturabilirsiniz.\r\n\r\n        // Örnek:\r\n        const newItem = {\r\n            id: '3',\r\n            en: 'newWord',\r\n            means: [\r\n                { mean: 'yeni', type: 'zf.' },\r\n                { mean: 'eklenen', type: 'zf.' },\r\n                { mean: 'kelime', type: 'zf.' },\r\n            ],\r\n            examples: [{ name: 'it is new' }, { name: 'she is added' }],\r\n            image: 'https://example.com/newImage.jpg',\r\n        };\r\n\r\n        onAddItem(newItem);\r\n\r\n        // İşlem tamamlandığında modal'ı kapatın\r\n        setModalVisible(false);\r\n    };\r\n\r\n    const handleModalVisible = (type) => {\r\n        handleDropModalVisible();\r\n        setModalVisible(true);\r\n        setisPageType(type)\r\n    };\r\n\r\n\r\n    const handleDropModalVisible = () => {\r\n        setdropModalVisible(!dropmodalVisible);\r\n    };\r\n\r\n\r\n    const WorkItem = ({ onAddItem }) => {\r\n        return (\r\n            <>\r\n                <TouchableOpacity\r\n                    style={styles.addItemButton}\r\n                    onPress={handleDropModalVisible}\r\n                >\r\n                    <View style={styles.buttonContent}>\r\n                        <Text>\r\n                            <Ionicons name=\"play\" size={24} color=\"orange\" />\r\n                            <Text style={styles.addItemText}>Alıştırma Yap</Text>\r\n                        </Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n\r\n            </>\r\n        );\r\n    };\r\n\r\n    const [isPageType, setisPageType] = useState(0);\r\n    const [currentCardIndex, setCurrentCardIndex] = useState(0);\r\n\r\n\r\n    const panResponder = React.useRef(\r\n        PanResponder.create({\r\n            onStartShouldSetPanResponder: () => true,\r\n            onPanResponderMove: (_, gestureState) => {\r\n                if (gestureState.dx > 50 && gestureState.vx > 0.5) {\r\n                    // Sağa kaydırma ve hız kontrolü\r\n                    handleNextCard();\r\n                } else if (gestureState.dx < -50 && gestureState.vx < -0.5) {\r\n                    // Sola kaydırma ve hız kontrolü\r\n                    handlePrevCard();\r\n                }\r\n            },\r\n            onPanResponderRelease: () => {\r\n                // Eğer gerekirse, dokunmatikten elini çektiğinizde başka bir şey yapabilirsiniz.\r\n            },\r\n        })\r\n    ).current;\r\n    const handleNextCard = () => {\r\n        if (currentCardIndex < chats.length - 1) {\r\n            setCurrentCardIndex((prevIndex) => prevIndex + 1);\r\n        } else {\r\n            // Eğer son kartsa başa dön\r\n            setCurrentCardIndex(0);\r\n        }\r\n    };\r\n\r\n\r\n    const handleTick = () => {\r\n        if (currentCardIndex < chats.length - 1) {\r\n            setCurrentCardIndex((prevIndex) => prevIndex + 1);\r\n        } else {\r\n            // Eğer son kartsa başa dön\r\n            setCurrentCardIndex(0);\r\n        }\r\n    };\r\n\r\n    const handlePrevCard = () => {\r\n        if (currentCardIndex > 0) {\r\n            setCurrentCardIndex((prevIndex) => prevIndex - 1);\r\n        } else {\r\n            // Eğer ilk kartsa sona git\r\n            setCurrentCardIndex(chats.length - 1);\r\n        }\r\n    };\r\n\r\n    const [gameCompleted, setGameCompleted] = useState(false);\r\n\r\n  const handleGameComplete = () => {\r\n    setGameCompleted(true);\r\n  };\r\n    return (\r\n        <View style={styles.container}>\r\n            <DropdownMenu\r\n                isVisible={dropmodalVisible}\r\n                onClose={() => setdropModalVisible(false)}\r\n            />\r\n\r\n\r\n\r\n            <View style={styles.addItemContainer}>\r\n                {isPageType === 0 ?\r\n                    <>\r\n\r\n                        <TouchableOpacity\r\n                            style={styles.addItemButton}\r\n                            onPress={() => setisPageType(1)}\r\n                        >\r\n                            <View style={styles.buttonContent}>\r\n                                <Text>\r\n                                    <Ionicons name=\"add\" size={24} color=\"green\" />\r\n                                    <Text style={styles.addItemText}>Yeni Kart Ekle</Text>\r\n                                </Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                        <View style={{ zIndex: 10 }}>\r\n                            <WorkItem onAddItem={handleAddItem} />\r\n                        </View>\r\n\r\n                    </> : <></>}\r\n\r\n                {isPageType === 1 ?\r\n                    <>\r\n                        <TouchableOpacity\r\n                            style={styles.addItemButton}\r\n                            onPress={() => setisPageType(0)}\r\n                        >\r\n                            <View style={styles.buttonContent}>\r\n                                <Text>\r\n                                    <Ionicons name=\"list\" size={24} color=\"green\" />\r\n                                    <Text style={styles.addItemText}>Tüm Kart Listesi</Text>\r\n                                </Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n\r\n                        <TouchableOpacity\r\n                            style={styles.addItemButton}\r\n                            onPress={() => setisPageType(2)}\r\n                        >\r\n                            <View style={styles.buttonContent}>\r\n                                <Text>\r\n                                    <Ionicons name=\"document\" size={24} color=\"blue\" />\r\n                                    <Text style={styles.addItemText}>Kart Grupları</Text>\r\n                                </Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    </> : <></>}\r\n\r\n                {isPageType === 2 ?\r\n                    <>\r\n                        <TouchableOpacity\r\n                            style={styles.addItemButton}\r\n                            onPress={() => setisPageType(0)}\r\n                        >\r\n                            <View style={styles.buttonContent}>\r\n                                <Text>\r\n                                    <Ionicons name=\"list\" size={24} color=\"green\" />\r\n                                    <Text style={styles.addItemText}>Tüm Kart Listesi</Text>\r\n                                </Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n\r\n                        <>\r\n                            <TouchableOpacity\r\n                                style={styles.addItemButton}\r\n                                onPress={() => setisPageType(1)}\r\n                            >\r\n                                <View style={styles.buttonContent}>\r\n                                    <Text>\r\n                                        <Ionicons name=\"add\" size={24} color=\"green\" />\r\n                                        <Text style={styles.addItemText}>Yeni Kart Ekle</Text>\r\n                                    </Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        </>\r\n                    </> : <></>}\r\n\r\n                {isPageType === 3 || isPageType === 4 || isPageType === 5 ?\r\n                    <>\r\n                        <TouchableOpacity\r\n                            style={styles.addItemButton}\r\n                            onPress={() => setisPageType(0)}\r\n                        >\r\n                            <View style={styles.buttonContent}>\r\n                                <Text>\r\n                                    <Ionicons name=\"list\" size={24} color=\"green\" />\r\n                                    <Text style={styles.addItemText}>Tüm Kart Listesi</Text>\r\n                                </Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity\r\n                            style={styles.addItemButton}\r\n                            onPress={() => setisPageType(1)}\r\n                        >\r\n                            <View style={styles.buttonContent}>\r\n                                <Text>\r\n                                    <Ionicons name=\"add\" size={24} color=\"green\" />\r\n                                    <Text style={styles.addItemText}>Yeni Kart Ekle</Text>\r\n                                </Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    </> : <></>}\r\n\r\n\r\n            </View>\r\n            {isPageType === 1 ? <AddItemFormComponent /> : <></>}\r\n            {isPageType === 2 ? <AddGroupFormComponent /> : <></>}\r\n            {isPageType === 0 ? <FlatList\r\n                data={chats}\r\n                renderItem={({ item }) => (\r\n                    <ChatItem\r\n                        key={item.id}\r\n                        item={item}\r\n                        onItemLongPress={() => onItemLongPress(item.id)}\r\n                        onItemPress={() => onItemPress(item.id)}\r\n                        selectedItems={selectedItems}\r\n                        type={0}\r\n                    />\r\n                )}\r\n                keyExtractor={(item) => item.id}\r\n                style={styles.flatList}\r\n            /> : <></>}\r\n\r\n            {isPageType === 3 ? <View\r\n                style={{\r\n                    flex: 1,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                }}\r\n                {...panResponder.panHandlers}\r\n            >\r\n\r\n                <ChatItem\r\n                    key={chats[currentCardIndex].id}\r\n                    item={chats[currentCardIndex]}\r\n                    onItemLongPress={() => onItemLongPress(chats[currentCardIndex])}\r\n                    onItemPress={() => onItemPress(chats[currentCardIndex])}\r\n                    type={1}\r\n                    // selectedItems={selectedItems}\r\n                    handlePrevCard={handlePrevCard}\r\n                    handleTick={handleTick}\r\n                    handleNextCard={handleNextCard}\r\n                />\r\n            </View> : ''}\r\n\r\n            {isPageType === 4 ? <ScrollView\r\n                style={{\r\n                    flex: 1,\r\n                }}\r\n                contentContainerStyle={{\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                }}\r\n                {...panResponder.panHandlers}\r\n            >\r\n                {/* Diğer içerikler buraya gelecek */}\r\n                <MultipleAnswer\r\n                    key={chats[currentCardIndex].id}\r\n                    item={chats[currentCardIndex]}\r\n                    onItemLongPress={() => onItemLongPress(chats[currentCardIndex])}\r\n                    onItemPress={() => onItemPress(chats[currentCardIndex])}\r\n                    type={1}\r\n                    handlePrevCard={handlePrevCard}\r\n                    handleTick={handleTick}\r\n                    handleNextCard={handleNextCard}\r\n                    chats={chats}\r\n                />\r\n\r\n                {/* İlk tablo */}\r\n                <table style={{ borderCollapse: 'collapse', marginBottom: 10 }}>\r\n                    <tbody>\r\n                        {Array.from({ length: Math.ceil(chats.length / 10) }, (_, groupIndex) => (\r\n                            <tr key={groupIndex}>\r\n                                {chats.slice(groupIndex * 10, (groupIndex + 1) * 10).map((option, index) => (\r\n                                    <td key={index}>\r\n                                        <div style={{\r\n                                            width: '25px',\r\n                                            height: '25px',\r\n                                            border: index + groupIndex * 10 === currentCardIndex ? '1px solid #000' : '1px solid #ddd',\r\n                                            padding: '8px',\r\n                                            background: 'white',\r\n                                            boxSizing: 'border-box',\r\n                                        }}>\r\n                                            {/* İçeriği buraya ekleyin */}\r\n                                        </div>\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n            </ScrollView> : ''}\r\n            {isPageType === 5?\r\n             <div>\r\n                 <MatchCarts cards={chats} onGameComplete={handleGameComplete} />\r\n             {/* {!gameCompleted ? (\r\n              \r\n             ) : (\r\n               <p>Congratulations! You completed the game.</p>\r\n             )} */}\r\n           </div>\r\n            :<></>}\r\n\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#f5f5f5',\r\n    },\r\n    buttonContent: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    addItemButton: {\r\n        padding: 10,\r\n        borderWidth: 1,\r\n        borderColor: '#e0e0e0',\r\n        borderRadius: 10,\r\n        marginBottom: 10,\r\n        marginTop: 10,\r\n        alignItems: 'center',\r\n    },\r\n    addItemText: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n    },\r\n\r\n    addItemContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        paddingHorizontal: 10,\r\n        paddingVertical: 5,\r\n    },\r\n    flatList: {\r\n        flex: 1,\r\n        zIndex: 4\r\n    },\r\n    listItem: {\r\n        padding: 15,\r\n        borderWidth: 1,\r\n        borderColor: '#e0e0e0',\r\n        borderRadius: 10,\r\n        marginBottom: 10,\r\n    },\r\n    listItemContent: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        width: '100%',\r\n        height: 200,\r\n        marginRight: 0,\r\n        borderRadius: 10,\r\n    },\r\n    chatInfo: {\r\n        flex: 1,\r\n    },\r\n\r\n    // Yeni eklenen stiller\r\n    wordCard: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginTop: 10,\r\n        marginBottom: 10\r\n    },\r\n    wordMains: {\r\n        flexDirection: 'row', // Yazıları yatayda sıralamak için\r\n        flexWrap: 'wrap',\r\n        marginLeft: 10,\r\n    },\r\n    wordMain: {\r\n        marginRight: 5,       // Yazılar arasına boşluk bırakmak için\r\n    },\r\n\r\n    wordDetails: {\r\n        flex: 1,\r\n        marginLeft: 10,\r\n    },\r\n\r\n    wordText: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n    },\r\n    soundIcon: {\r\n        marginLeft: 5,\r\n    },\r\n    wordType: {\r\n        fontSize: 14,\r\n        color: '#888',\r\n\r\n    },\r\n    exampleSentence: {\r\n        marginTop: 4,\r\n        fontSize: 14,\r\n        color: '#555',\r\n    },\r\n\r\n    // ... (diğer stiller)\r\n    buttonContent: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        zIndex: 8,\r\n    },\r\n    addItemButton: {\r\n        padding: 10,\r\n        borderWidth: 1,\r\n        borderColor: '#e0e0e0',\r\n        borderRadius: 10,\r\n        marginBottom: 10,\r\n        marginTop: 10,\r\n        alignItems: 'center',\r\n        zIndex: 8,\r\n    },\r\n    addItemText: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n        zIndex: 8,\r\n    },\r\n    modalContainer: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#f5f5f5',\r\n        zIndex: 8,\r\n    },\r\n    modalTitle: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 20,\r\n        zIndex: 8,\r\n    },\r\n    addButton: {\r\n        backgroundColor: '#4CAF50',\r\n        padding: 10,\r\n        borderRadius: 5,\r\n        marginVertical: 10,\r\n        zIndex: 8,\r\n    },\r\n    addButtonText: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n        zIndex: 8,\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 20,\r\n        right: 20,\r\n        zIndex: 1,\r\n    },\r\n    dropdownContainer: {\r\n        position: 'absolute',\r\n        top: 70, // Butonun altında çıkması için gerekli değeri ayarlayabilirsiniz.\r\n        right: 10,\r\n        backgroundColor: 'white',\r\n        borderRadius: 5,\r\n        elevation: 5,\r\n        padding: 5,\r\n        zIndex: 10,\r\n    },\r\n    dropdownItem: {\r\n        padding: 10,\r\n    },\r\n    imagePlaceholder: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#ddd', // veya başka bir arkaplan rengi\r\n        borderRadius: 10,\r\n    },\r\n});\r\n\r\nexport default ChatsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}