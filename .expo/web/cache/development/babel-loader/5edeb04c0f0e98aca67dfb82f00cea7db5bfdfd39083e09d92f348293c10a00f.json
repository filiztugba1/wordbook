{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { withStyleAnimation } from \"../animation/styleAnimation\";\nimport { makeUIMutable } from \"../mutables\";\nimport { LayoutAnimationType } from \"./animationBuilder\";\nimport { runOnUIImmediately } from \"../threads\";\nvar TAG_OFFSET = 1e9;\nfunction startObservingProgress(tag, sharedValue, animationType) {\n  'worklet';\n\n  var isSharedTransition = animationType === LayoutAnimationType.SHARED_ELEMENT_TRANSITION;\n  sharedValue.addListener(tag + TAG_OFFSET, function () {\n    _notifyAboutProgress(tag, sharedValue.value, isSharedTransition);\n  });\n}\nfunction stopObservingProgress(tag, sharedValue) {\n  'worklet';\n\n  var removeView = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  sharedValue.removeListener(tag + TAG_OFFSET);\n  _notifyAboutEnd(tag, removeView);\n}\nfunction createLayoutAnimationManager() {\n  'worklet';\n\n  var currentAnimationForTag = new Map();\n  var mutableValuesForTag = new Map();\n  return {\n    start: function start(tag, type, yogaValues, config) {\n      if (type === LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS) {\n        global.ProgressTransitionRegister.onTransitionStart(tag, yogaValues);\n        return;\n      }\n      var style = config(yogaValues);\n      var currentAnimation = style.animations;\n      var previousAnimation = currentAnimationForTag.get(tag);\n      if (previousAnimation) {\n        currentAnimation = _objectSpread(_objectSpread({}, previousAnimation), style.animations);\n      }\n      currentAnimationForTag.set(tag, currentAnimation);\n      var value = mutableValuesForTag.get(tag);\n      if (value === undefined) {\n        value = makeUIMutable(style.initialValues);\n        mutableValuesForTag.set(tag, value);\n      } else {\n        stopObservingProgress(tag, value);\n        value._value = style.initialValues;\n      }\n      var animation = withStyleAnimation(currentAnimation);\n      animation.callback = function (finished) {\n        if (finished) {\n          currentAnimationForTag.delete(tag);\n          mutableValuesForTag.delete(tag);\n          var shouldRemoveView = type === LayoutAnimationType.EXITING;\n          stopObservingProgress(tag, value, shouldRemoveView);\n        }\n        style.callback && style.callback(finished === undefined ? false : finished);\n      };\n      startObservingProgress(tag, value, type);\n      value.value = animation;\n    },\n    stop: function stop(tag) {\n      var value = mutableValuesForTag.get(tag);\n      if (!value) {\n        return;\n      }\n      stopObservingProgress(tag, value);\n    }\n  };\n}\nrunOnUIImmediately(function () {\n  'worklet';\n\n  global.LayoutAnimationsManager = createLayoutAnimationManager();\n})();","map":{"version":3,"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","withStyleAnimation","makeUIMutable","LayoutAnimationType","runOnUIImmediately","TAG_OFFSET","startObservingProgress","tag","sharedValue","animationType","isSharedTransition","SHARED_ELEMENT_TRANSITION","addListener","_notifyAboutProgress","value","stopObservingProgress","removeView","undefined","removeListener","_notifyAboutEnd","createLayoutAnimationManager","currentAnimationForTag","Map","mutableValuesForTag","start","type","yogaValues","config","SHARED_ELEMENT_TRANSITION_PROGRESS","global","ProgressTransitionRegister","onTransitionStart","style","currentAnimation","animations","previousAnimation","get","set","initialValues","_value","animation","callback","finished","delete","shouldRemoveView","EXITING","stop","LayoutAnimationsManager"],"sources":["D:\\react-native-uygulamalarım\\wordbook\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\layoutReanimation\\animationsManager.ts"],"sourcesContent":["'use strict';\nimport { withStyleAnimation } from '../animation/styleAnimation';\nimport type { SharedValue } from '../commonTypes';\nimport { makeUIMutable } from '../mutables';\nimport { LayoutAnimationType } from './animationBuilder';\nimport { runOnUIImmediately } from '../threads';\nimport type {\n  SharedTransitionAnimationsValues,\n  LayoutAnimation,\n} from './animationBuilder/commonTypes';\n\nconst TAG_OFFSET = 1e9;\n\nfunction startObservingProgress(\n  tag: number,\n  sharedValue: SharedValue<Record<string, unknown>>,\n  animationType: LayoutAnimationType\n): void {\n  'worklet';\n  const isSharedTransition =\n    animationType === LayoutAnimationType.SHARED_ELEMENT_TRANSITION;\n  sharedValue.addListener(tag + TAG_OFFSET, () => {\n    _notifyAboutProgress(tag, sharedValue.value, isSharedTransition);\n  });\n}\n\nfunction stopObservingProgress(\n  tag: number,\n  sharedValue: SharedValue<number>,\n  removeView = false\n): void {\n  'worklet';\n  sharedValue.removeListener(tag + TAG_OFFSET);\n  _notifyAboutEnd(tag, removeView);\n}\n\nfunction createLayoutAnimationManager() {\n  'worklet';\n  const currentAnimationForTag = new Map();\n  const mutableValuesForTag = new Map();\n\n  return {\n    start(\n      tag: number,\n      type: LayoutAnimationType,\n      /**\n       * createLayoutAnimationManager creates an animation manager for both Layout animations and Shared Transition Elements animations.\n       */\n      yogaValues: Partial<SharedTransitionAnimationsValues>,\n      config: (\n        arg: Partial<SharedTransitionAnimationsValues>\n      ) => LayoutAnimation\n    ) {\n      if (type === LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS) {\n        global.ProgressTransitionRegister.onTransitionStart(tag, yogaValues);\n        return;\n      }\n\n      const style = config(yogaValues);\n      let currentAnimation = style.animations;\n\n      // When layout animation is requested, but a previous one is still running, we merge\n      // new layout animation targets into the ongoing animation\n      const previousAnimation = currentAnimationForTag.get(tag);\n      if (previousAnimation) {\n        currentAnimation = { ...previousAnimation, ...style.animations };\n      }\n      currentAnimationForTag.set(tag, currentAnimation);\n\n      let value = mutableValuesForTag.get(tag);\n      if (value === undefined) {\n        value = makeUIMutable(style.initialValues);\n        mutableValuesForTag.set(tag, value);\n      } else {\n        stopObservingProgress(tag, value);\n        value._value = style.initialValues;\n      }\n\n      // @ts-ignore The line below started failing because I added types to the method – don't have time to fix it right now\n      const animation = withStyleAnimation(currentAnimation);\n\n      animation.callback = (finished?: boolean) => {\n        if (finished) {\n          currentAnimationForTag.delete(tag);\n          mutableValuesForTag.delete(tag);\n          const shouldRemoveView = type === LayoutAnimationType.EXITING;\n          stopObservingProgress(tag, value, shouldRemoveView);\n        }\n        style.callback &&\n          style.callback(finished === undefined ? false : finished);\n      };\n\n      startObservingProgress(tag, value, type);\n      value.value = animation;\n    },\n    stop(tag: number) {\n      const value = mutableValuesForTag.get(tag);\n      if (!value) {\n        return;\n      }\n      stopObservingProgress(tag, value);\n    },\n  };\n}\n\nrunOnUIImmediately(() => {\n  'worklet';\n  global.LayoutAnimationsManager = createLayoutAnimationManager();\n})();\n\nexport type LayoutAnimationsManager = ReturnType<\n  typeof createLayoutAnimationManager\n>;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}