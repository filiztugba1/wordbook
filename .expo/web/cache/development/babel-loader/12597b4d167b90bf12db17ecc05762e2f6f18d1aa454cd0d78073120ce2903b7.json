{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport Pie from \"paths-js/pie\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { G, Path, Rect, Svg, Text } from \"react-native-svg\";\nimport AbstractChart from \"./AbstractChart\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PieChart = function (_super) {\n  __extends(PieChart, _super);\n  function PieChart() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PieChart.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      _b = _a.style,\n      style = _b === void 0 ? {} : _b,\n      backgroundColor = _a.backgroundColor,\n      _c = _a.absolute,\n      absolute = _c === void 0 ? false : _c,\n      _d = _a.hasLegend,\n      hasLegend = _d === void 0 ? true : _d,\n      _e = _a.avoidFalseZero,\n      avoidFalseZero = _e === void 0 ? false : _e;\n    var _f = style.borderRadius,\n      borderRadius = _f === void 0 ? 0 : _f;\n    var chart = Pie({\n      center: this.props.center || [0, 0],\n      r: 0,\n      R: this.props.height / 2.5,\n      data: this.props.data,\n      accessor: function accessor(x) {\n        return x[_this.props.accessor];\n      }\n    });\n    var total = this.props.data.reduce(function (sum, item) {\n      return sum + item[_this.props.accessor];\n    }, 0);\n    var slices = chart.curves.map(function (c, i) {\n      var value;\n      if (absolute) {\n        value = c.item[_this.props.accessor];\n      } else {\n        if (total === 0) {\n          value = 0 + \"%\";\n        } else {\n          var percentage = Math.round(100 / total * c.item[_this.props.accessor]);\n          value = Math.round(100 / total * c.item[_this.props.accessor]) + \"%\";\n          if (avoidFalseZero && percentage === 0) {\n            value = \"<1%\";\n          } else {\n            value = percentage + \"%\";\n          }\n        }\n      }\n      return _jsxs(G, {\n        children: [_jsx(Path, {\n          d: c.sector.path.print(),\n          fill: c.item.color\n        }), hasLegend ? _jsx(Rect, {\n          width: \"16px\",\n          height: \"16px\",\n          fill: c.item.color,\n          rx: 8,\n          ry: 8,\n          x: _this.props.width / 2.5 - 24,\n          y: -(_this.props.height / 2.5) + _this.props.height * 0.8 / _this.props.data.length * i + 12\n        }) : null, hasLegend ? _jsx(Text, {\n          fill: c.item.legendFontColor,\n          fontSize: c.item.legendFontSize,\n          fontFamily: c.item.legendFontFamily,\n          x: _this.props.width / 2.5,\n          y: -(_this.props.height / 2.5) + _this.props.height * 0.8 / _this.props.data.length * i + 12 * 2,\n          children: value + \" \" + c.item.name\n        }) : null]\n      }, Math.random());\n    });\n    return _jsx(View, {\n      style: __assign({\n        width: this.props.width,\n        height: this.props.height,\n        padding: 0\n      }, style),\n      children: _jsxs(Svg, {\n        width: this.props.width,\n        height: this.props.height,\n        children: [_jsx(G, {\n          children: this.renderDefs(__assign({\n            width: this.props.height,\n            height: this.props.height\n          }, this.props.chartConfig))\n        }), _jsx(Rect, {\n          width: \"100%\",\n          height: this.props.height,\n          rx: borderRadius,\n          ry: borderRadius,\n          fill: backgroundColor\n        }), _jsx(G, {\n          x: this.props.width / 2 / 2 + Number(this.props.paddingLeft ? this.props.paddingLeft : 0),\n          y: this.props.height / 2,\n          children: slices\n        })]\n      })\n    });\n  };\n  return PieChart;\n}(AbstractChart);\nexport default PieChart;","map":{"version":3,"names":["Pie","React","View","G","Path","Rect","Svg","Text","AbstractChart","jsx","_jsx","jsxs","_jsxs","PieChart","_super","__extends","prototype","render","_this","_a","props","_b","style","backgroundColor","_c","absolute","_d","hasLegend","_e","avoidFalseZero","_f","borderRadius","chart","center","r","R","height","data","accessor","x","total","reduce","sum","item","slices","curves","map","c","i","value","percentage","Math","round","children","d","sector","path","print","fill","color","width","rx","ry","y","length","legendFontColor","fontSize","legendFontSize","fontFamily","legendFontFamily","name","random","__assign","padding","renderDefs","chartConfig","Number","paddingLeft"],"sources":["D:\\react-native-uygulamalarÄ±m\\wordbook\\node_modules\\react-native-chart-kit\\src\\PieChart.tsx"],"sourcesContent":["import Pie from \"paths-js/pie\";\nimport React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\nimport { G, Path, Rect, Svg, Text } from \"react-native-svg\";\n\nimport AbstractChart, { AbstractChartProps } from \"./AbstractChart\";\n\nexport interface PieChartProps extends AbstractChartProps {\n  data: Array<any>;\n  width: number;\n  height: number;\n  accessor: string;\n  backgroundColor: string;\n  paddingLeft: string;\n  center?: Array<number>;\n  absolute?: boolean;\n  hasLegend?: boolean;\n  style?: Partial<ViewStyle>;\n  avoidFalseZero?: boolean;\n}\n\ntype PieChartState = {};\n\nclass PieChart extends AbstractChart<PieChartProps, PieChartState> {\n  render() {\n    const {\n      style = {},\n      backgroundColor,\n      absolute = false,\n      hasLegend = true,\n      avoidFalseZero = false\n    } = this.props;\n\n    const { borderRadius = 0 } = style;\n\n    const chart = Pie({\n      center: this.props.center || [0, 0],\n      r: 0,\n      R: this.props.height / 2.5,\n      data: this.props.data,\n      accessor: x => {\n        return x[this.props.accessor];\n      }\n    });\n\n    const total = this.props.data.reduce((sum, item) => {\n      return sum + item[this.props.accessor];\n    }, 0);\n\n    const slices = chart.curves.map((c, i) => {\n      let value: string;\n\n      if (absolute) {\n        value = c.item[this.props.accessor];\n      } else {\n        if (total === 0) {\n          value = 0 + \"%\";\n        } else {\n          const percentage = Math.round(\n            (100 / total) * c.item[this.props.accessor]\n          );\n          value = Math.round((100 / total) * c.item[this.props.accessor]) + \"%\";\n          if (avoidFalseZero && percentage === 0) {\n            value = \"<1%\";\n          } else {\n            value = percentage + \"%\";\n          }\n        }\n      }\n\n      return (\n        <G key={Math.random()}>\n          <Path d={c.sector.path.print()} fill={c.item.color} />\n          {hasLegend ? (\n            <Rect\n              width=\"16px\"\n              height=\"16px\"\n              fill={c.item.color}\n              rx={8}\n              ry={8}\n              x={this.props.width / 2.5 - 24}\n              y={\n                -(this.props.height / 2.5) +\n                ((this.props.height * 0.8) / this.props.data.length) * i +\n                12\n              }\n            />\n          ) : null}\n          {hasLegend ? (\n            <Text\n              fill={c.item.legendFontColor}\n              fontSize={c.item.legendFontSize}\n              fontFamily={c.item.legendFontFamily}\n              x={this.props.width / 2.5}\n              y={\n                -(this.props.height / 2.5) +\n                ((this.props.height * 0.8) / this.props.data.length) * i +\n                12 * 2\n              }\n            >\n              {`${value} ${c.item.name}`}\n            </Text>\n          ) : null}\n        </G>\n      );\n    });\n\n    return (\n      <View\n        style={{\n          width: this.props.width,\n          height: this.props.height,\n          padding: 0,\n          ...style\n        }}\n      >\n        <Svg width={this.props.width} height={this.props.height}>\n          <G>\n            {this.renderDefs({\n              width: this.props.height,\n              height: this.props.height,\n              ...this.props.chartConfig\n            })}\n          </G>\n          <Rect\n            width=\"100%\"\n            height={this.props.height}\n            rx={borderRadius}\n            ry={borderRadius}\n            fill={backgroundColor}\n          />\n          <G\n            x={\n              this.props.width / 2 / 2 +\n              Number(this.props.paddingLeft ? this.props.paddingLeft : 0)\n            }\n            y={this.props.height / 2}\n          >\n            {slices}\n          </G>\n        </Svg>\n      </View>\n    );\n  }\n}\n\nexport default PieChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}