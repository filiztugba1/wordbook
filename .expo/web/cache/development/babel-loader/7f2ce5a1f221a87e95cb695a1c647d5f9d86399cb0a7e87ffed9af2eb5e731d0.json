{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { SyntheticPlatformEmitter, CodedError } from 'expo-modules-core';\nimport { VoiceQuality } from \"./Speech.types\";\nvar MAX_SPEECH_INPUT_LENGTH = 32767;\nfunction _getVoices2() {\n  return _getVoices.apply(this, arguments);\n}\nfunction _getVoices() {\n  _getVoices = _asyncToGenerator(function* () {\n    return new Promise(function (resolve) {\n      var voices = window.speechSynthesis.getVoices();\n      if (voices.length > 0) {\n        resolve(voices);\n        return;\n      }\n      window.speechSynthesis.onvoiceschanged = function () {\n        var voices = window.speechSynthesis.getVoices();\n        resolve(voices);\n      };\n    });\n  });\n  return _getVoices.apply(this, arguments);\n}\nexport default {\n  get name() {\n    return 'ExponentSpeech';\n  },\n  speak: function () {\n    var _speak = _asyncToGenerator(function* (id, text, options) {\n      if (text.length > MAX_SPEECH_INPUT_LENGTH) {\n        throw new CodedError('ERR_SPEECH_INPUT_LENGTH', 'Speech input text is too long! Limit of input length is: ' + MAX_SPEECH_INPUT_LENGTH);\n      }\n      var message = new SpeechSynthesisUtterance();\n      if (typeof options.rate === 'number') {\n        message.rate = options.rate;\n      }\n      if (typeof options.pitch === 'number') {\n        message.pitch = options.pitch;\n      }\n      if (typeof options.language === 'string') {\n        message.lang = options.language;\n      }\n      if (typeof options.volume === 'number') {\n        message.volume = options.volume;\n      }\n      if ('_voiceIndex' in options && options._voiceIndex != null) {\n        var voices = yield _getVoices2();\n        message.voice = voices[Math.min(voices.length - 1, Math.max(0, options._voiceIndex))];\n      }\n      if (typeof options.voice === 'string') {\n        var _voices = yield _getVoices2();\n        message.voice = _voices[Math.max(0, _voices.findIndex(function (voice) {\n          return voice.voiceURI === options.voice;\n        }))];\n      }\n      if (typeof options.onResume === 'function') {\n        message.onresume = options.onResume;\n      }\n      if (typeof options.onMark === 'function') {\n        message.onmark = options.onMark;\n      }\n      if (typeof options.onBoundary === 'function') {\n        message.onboundary = options.onBoundary;\n      }\n      message.onstart = function (nativeEvent) {\n        SyntheticPlatformEmitter.emit('Exponent.speakingStarted', {\n          id: id,\n          nativeEvent: nativeEvent\n        });\n      };\n      message.onend = function (nativeEvent) {\n        SyntheticPlatformEmitter.emit('Exponent.speakingDone', {\n          id: id,\n          nativeEvent: nativeEvent\n        });\n      };\n      message.onpause = function (nativeEvent) {\n        SyntheticPlatformEmitter.emit('Exponent.speakingStopped', {\n          id: id,\n          nativeEvent: nativeEvent\n        });\n      };\n      message.onerror = function (nativeEvent) {\n        SyntheticPlatformEmitter.emit('Exponent.speakingError', {\n          id: id,\n          nativeEvent: nativeEvent\n        });\n      };\n      message.text = text;\n      window.speechSynthesis.speak(message);\n      return message;\n    });\n    function speak(_x, _x2, _x3) {\n      return _speak.apply(this, arguments);\n    }\n    return speak;\n  }(),\n  getVoices: function () {\n    var _getVoices3 = _asyncToGenerator(function* () {\n      var voices = yield _getVoices2();\n      return voices.map(function (voice) {\n        return {\n          identifier: voice.voiceURI,\n          quality: VoiceQuality.Default,\n          isDefault: voice.default,\n          language: voice.lang,\n          localService: voice.localService,\n          name: voice.name,\n          voiceURI: voice.voiceURI\n        };\n      });\n    });\n    function getVoices() {\n      return _getVoices3.apply(this, arguments);\n    }\n    return getVoices;\n  }(),\n  isSpeaking: function () {\n    var _isSpeaking = _asyncToGenerator(function* () {\n      return window.speechSynthesis.speaking;\n    });\n    function isSpeaking() {\n      return _isSpeaking.apply(this, arguments);\n    }\n    return isSpeaking;\n  }(),\n  stop: function () {\n    var _stop = _asyncToGenerator(function* () {\n      return window.speechSynthesis.cancel();\n    });\n    function stop() {\n      return _stop.apply(this, arguments);\n    }\n    return stop;\n  }(),\n  pause: function () {\n    var _pause = _asyncToGenerator(function* () {\n      return window.speechSynthesis.pause();\n    });\n    function pause() {\n      return _pause.apply(this, arguments);\n    }\n    return pause;\n  }(),\n  resume: function () {\n    var _resume = _asyncToGenerator(function* () {\n      return window.speechSynthesis.resume();\n    });\n    function resume() {\n      return _resume.apply(this, arguments);\n    }\n    return resume;\n  }(),\n  maxSpeechInputLength: MAX_SPEECH_INPUT_LENGTH\n};","map":{"version":3,"names":["SyntheticPlatformEmitter","CodedError","VoiceQuality","MAX_SPEECH_INPUT_LENGTH","getVoices","_getVoices","apply","arguments","_asyncToGenerator","Promise","resolve","voices","window","speechSynthesis","length","onvoiceschanged","name","speak","_speak","id","text","options","message","SpeechSynthesisUtterance","rate","pitch","language","lang","volume","_voiceIndex","voice","Math","min","max","findIndex","voiceURI","onResume","onresume","onMark","onmark","onBoundary","onboundary","onstart","nativeEvent","emit","onend","onpause","onerror","_x","_x2","_x3","_getVoices3","map","identifier","quality","Default","isDefault","default","localService","isSpeaking","_isSpeaking","speaking","stop","_stop","cancel","pause","_pause","resume","_resume","maxSpeechInputLength"],"sources":["D:\\react-native-uygulamalarÄ±m\\wordbook\\node_modules\\expo-speech\\src\\Speech\\ExponentSpeech.web.ts"],"sourcesContent":["import { SyntheticPlatformEmitter, CodedError } from 'expo-modules-core';\n\nimport { SpeechOptions, WebVoice, VoiceQuality } from './Speech.types';\n\n//https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/text\nconst MAX_SPEECH_INPUT_LENGTH = 32767;\n\nasync function getVoices(): Promise<SpeechSynthesisVoice[]> {\n  return new Promise<SpeechSynthesisVoice[]>((resolve) => {\n    const voices = window.speechSynthesis.getVoices();\n\n    if (voices.length > 0) {\n      resolve(voices);\n      return;\n    }\n\n    // when a page loads it takes some amount of time to populate the voices list\n    // see https://stackoverflow.com/a/52005323/4337317\n    window.speechSynthesis.onvoiceschanged = function () {\n      const voices = window.speechSynthesis.getVoices();\n      resolve(voices);\n    };\n  });\n}\n\nexport default {\n  get name(): string {\n    return 'ExponentSpeech';\n  },\n  async speak(id: string, text: string, options: SpeechOptions): Promise<SpeechSynthesisUtterance> {\n    if (text.length > MAX_SPEECH_INPUT_LENGTH) {\n      throw new CodedError(\n        'ERR_SPEECH_INPUT_LENGTH',\n        'Speech input text is too long! Limit of input length is: ' + MAX_SPEECH_INPUT_LENGTH\n      );\n    }\n\n    const message = new SpeechSynthesisUtterance();\n\n    if (typeof options.rate === 'number') {\n      message.rate = options.rate;\n    }\n    if (typeof options.pitch === 'number') {\n      message.pitch = options.pitch;\n    }\n    if (typeof options.language === 'string') {\n      message.lang = options.language;\n    }\n    if (typeof options.volume === 'number') {\n      message.volume = options.volume;\n    }\n    if ('_voiceIndex' in options && options._voiceIndex != null) {\n      const voices = await getVoices();\n      message.voice = voices[Math.min(voices.length - 1, Math.max(0, options._voiceIndex))];\n    }\n    if (typeof options.voice === 'string') {\n      const voices = await getVoices();\n      message.voice =\n        voices[\n          Math.max(\n            0,\n            voices.findIndex((voice) => voice.voiceURI === options.voice)\n          )\n        ];\n    }\n    if (typeof options.onResume === 'function') {\n      message.onresume = options.onResume;\n    }\n    if (typeof options.onMark === 'function') {\n      message.onmark = options.onMark;\n    }\n    if (typeof options.onBoundary === 'function') {\n      message.onboundary = options.onBoundary;\n    }\n\n    message.onstart = (nativeEvent: SpeechSynthesisEvent) => {\n      SyntheticPlatformEmitter.emit('Exponent.speakingStarted', { id, nativeEvent });\n    };\n    message.onend = (nativeEvent: SpeechSynthesisEvent) => {\n      SyntheticPlatformEmitter.emit('Exponent.speakingDone', { id, nativeEvent });\n    };\n    message.onpause = (nativeEvent: SpeechSynthesisEvent) => {\n      SyntheticPlatformEmitter.emit('Exponent.speakingStopped', { id, nativeEvent });\n    };\n    message.onerror = (nativeEvent: SpeechSynthesisErrorEvent) => {\n      SyntheticPlatformEmitter.emit('Exponent.speakingError', { id, nativeEvent });\n    };\n\n    message.text = text;\n\n    window.speechSynthesis.speak(message);\n\n    return message;\n  },\n  async getVoices(): Promise<WebVoice[]> {\n    const voices = await getVoices();\n    return voices.map((voice) => ({\n      identifier: voice.voiceURI,\n      quality: VoiceQuality.Default,\n      isDefault: voice.default,\n      language: voice.lang,\n      localService: voice.localService,\n      name: voice.name,\n      voiceURI: voice.voiceURI,\n    }));\n  },\n  async isSpeaking(): Promise<boolean> {\n    return window.speechSynthesis.speaking;\n  },\n  async stop(): Promise<void> {\n    return window.speechSynthesis.cancel();\n  },\n  async pause(): Promise<void> {\n    return window.speechSynthesis.pause();\n  },\n  async resume(): Promise<void> {\n    return window.speechSynthesis.resume();\n  },\n  maxSpeechInputLength: MAX_SPEECH_INPUT_LENGTH,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}