{"ast":null,"code":"export var VoiceQuality;\n(function (VoiceQuality) {\n  VoiceQuality[\"Default\"] = \"Default\";\n  VoiceQuality[\"Enhanced\"] = \"Enhanced\";\n})(VoiceQuality || (VoiceQuality = {}));","map":{"version":3,"names":["VoiceQuality"],"sources":["D:\\react-native-uygulamalarÄ±m\\wordbook\\node_modules\\expo-speech\\src\\Speech\\Speech.types.ts"],"sourcesContent":["export type SpeechEventCallback = (this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any;\nexport type NativeBoundaryEvent = { charIndex: number; charLength: number };\n\n/**\n * Native-only callback with parameters related to the word about to be uttered.\n * @platform ios\n * @platform android\n */\nexport type NativeBoundaryEventCallback = (ev: NativeBoundaryEvent) => void;\n\n// @needsAudit @docsMissing\nexport type SpeechOptions = {\n  /**\n   * The code of a language that should be used to read the `text`, refer to IETF BCP 47 to see\n   * valid codes.\n   */\n  language?: string;\n  /**\n   * Pitch of the voice to speak `text`. `1.0` is the normal pitch.\n   */\n  pitch?: number;\n  /**\n   * Rate of the voice to speak `text`. `1.0` is the normal rate.\n   */\n  rate?: number;\n  /**\n   * A callback that is invoked when speaking starts.\n   */\n  onStart?: () => void | SpeechEventCallback;\n  /**\n   * A callback that is invoked when speaking is stopped by calling `Speech.stop()`.\n   */\n  onStopped?: () => void | SpeechEventCallback;\n  /**\n   * A callback that is invoked when speaking finishes.\n   */\n  onDone?: () => void | SpeechEventCallback;\n  /**\n   * A callback that is invoked when an error occurred while speaking.\n   * @param error\n   * @platform android\n   * @platform ios\n   */\n  onError?: (error: Error) => void | SpeechEventCallback;\n  /**\n   * Volume of the voice to speak `text`. A number between `0.0` (muted) and `1.0` (max volume)\n   *\n   * @default 1.0\n   * @platform web\n   */\n  volume?: number;\n  /**\n   * Voice identifier.\n   */\n  voice?: string;\n  _voiceIndex?: number;\n\n  /**\n   * A callback that is invoked when the spoken utterance reaches a word.\n   */\n  onBoundary?: NativeBoundaryEventCallback | SpeechEventCallback | null;\n  onMark?: SpeechEventCallback | null;\n  onPause?: SpeechEventCallback | null;\n  onResume?: SpeechEventCallback | null;\n};\n\n// @needsAudit\n/**\n * Enum representing the voice quality.\n */\nexport enum VoiceQuality {\n  Default = 'Default',\n  Enhanced = 'Enhanced',\n}\n\n// @needsAudit\n/**\n * Object describing the available voices on the device.\n */\nexport type Voice = {\n  /**\n   * Voice unique identifier.\n   */\n  identifier: string;\n  /**\n   * Voice name.\n   */\n  name: string;\n  /**\n   * Voice quality.\n   */\n  quality: VoiceQuality;\n  /**\n   * Voice language.\n   */\n  language: string;\n};\n\n// @docsMissing\nexport type WebVoice = Voice & {\n  isDefault: boolean;\n  localService: boolean;\n  name: string;\n  voiceURI: string;\n};\n"],"mappings":"AAsEA,WAAYA,YAGX;AAHD,WAAYA,YAAY;EACtBA,YAAA,uBAAmB;EACnBA,YAAA,yBAAqB;AACvB,CAAC,EAHWA,YAAY,KAAZA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}