{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { processColorsInProps } from \"./Colors\";\nimport { _updatePropsJS } from \"./js-reanimated\";\nimport { isFabric, isJest, shouldBeUseWeb } from \"./PlatformChecker\";\nimport { runOnUIImmediately } from \"./threads\";\nvar updateProps;\nif (shouldBeUseWeb()) {\n  updateProps = function updateProps(_, updates, maybeViewRef, isAnimatedProps) {\n    'worklet';\n\n    if (maybeViewRef) {\n      maybeViewRef.items.forEach(function (item, _index) {\n        _updatePropsJS(updates, item, isAnimatedProps);\n      });\n    }\n  };\n} else {\n  updateProps = function updateProps(viewDescriptors, updates) {\n    'worklet';\n\n    processColorsInProps(updates);\n    global.UpdatePropsManager.update(viewDescriptors, updates);\n  };\n}\nexport var updatePropsJestWrapper = function updatePropsJestWrapper(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters) {\n  adapters.forEach(function (adapter) {\n    adapter(updates);\n  });\n  animatedStyle.current.value = _objectSpread(_objectSpread({}, animatedStyle.current.value), updates);\n  updateProps(viewDescriptors, updates, maybeViewRef);\n};\nexport default updateProps;\nvar createUpdatePropsManager = isFabric() ? function () {\n  'worklet';\n  var operations = [];\n  return {\n    update: function update(viewDescriptors, updates) {\n      var _this = this;\n      viewDescriptors.value.forEach(function (viewDescriptor) {\n        operations.push({\n          shadowNodeWrapper: viewDescriptor.shadowNodeWrapper,\n          updates: updates\n        });\n        if (operations.length === 1) {\n          queueMicrotask(_this.flush);\n        }\n      });\n    },\n    flush: function flush() {\n      _updatePropsFabric(operations);\n      operations.length = 0;\n    }\n  };\n} : function () {\n  'worklet';\n  var operations = [];\n  return {\n    update: function update(viewDescriptors, updates) {\n      var _this2 = this;\n      viewDescriptors.value.forEach(function (viewDescriptor) {\n        operations.push({\n          tag: viewDescriptor.tag,\n          name: viewDescriptor.name || 'RCTView',\n          updates: updates\n        });\n        if (operations.length === 1) {\n          queueMicrotask(_this2.flush);\n        }\n      });\n    },\n    flush: function flush() {\n      _updatePropsPaper(operations);\n      operations.length = 0;\n    }\n  };\n};\nif (shouldBeUseWeb()) {\n  var maybeThrowError = function maybeThrowError() {\n    if (!isJest()) {\n      throw new Error('[Reanimated] `UpdatePropsManager` is not available on non-native platform.');\n    }\n  };\n  global.UpdatePropsManager = new Proxy({}, {\n    get: maybeThrowError,\n    set: function set() {\n      maybeThrowError();\n      return false;\n    }\n  });\n} else {\n  runOnUIImmediately(function () {\n    'worklet';\n\n    global.UpdatePropsManager = createUpdatePropsManager();\n  })();\n}","map":{"version":3,"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","processColorsInProps","_updatePropsJS","isFabric","isJest","shouldBeUseWeb","runOnUIImmediately","updateProps","_","updates","maybeViewRef","isAnimatedProps","items","item","_index","viewDescriptors","global","UpdatePropsManager","update","updatePropsJestWrapper","animatedStyle","adapters","adapter","current","value","createUpdatePropsManager","operations","_this","viewDescriptor","shadowNodeWrapper","queueMicrotask","flush","_updatePropsFabric","_this2","tag","name","_updatePropsPaper","maybeThrowError","Error","Proxy","get","set"],"sources":["D:\\react-native-uygulamalarÄ±m\\wordbook\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\UpdateProps.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-redundant-type-constituents */\n'use strict';\nimport type { MutableRefObject } from 'react';\nimport { processColorsInProps } from './Colors';\nimport type { ShadowNodeWrapper, SharedValue, StyleProps } from './commonTypes';\nimport type { AnimatedStyle } from './helperTypes';\nimport type { Descriptor } from './hook/commonTypes';\nimport { _updatePropsJS } from './js-reanimated';\nimport { isFabric, isJest, shouldBeUseWeb } from './PlatformChecker';\nimport type { ViewRefSet } from './ViewDescriptorsSet';\nimport { runOnUIImmediately } from './threads';\n\nlet updateProps: (\n  viewDescriptor: SharedValue<Descriptor[]>,\n  updates: StyleProps | AnimatedStyle<any>,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  isAnimatedProps?: boolean\n) => void;\n\nif (shouldBeUseWeb()) {\n  updateProps = (_, updates, maybeViewRef, isAnimatedProps) => {\n    'worklet';\n    if (maybeViewRef) {\n      maybeViewRef.items.forEach((item, _index) => {\n        _updatePropsJS(updates, item, isAnimatedProps);\n      });\n    }\n  };\n} else {\n  updateProps = (viewDescriptors, updates) => {\n    'worklet';\n    processColorsInProps(updates);\n    global.UpdatePropsManager.update(viewDescriptors, updates);\n  };\n}\n\nexport const updatePropsJestWrapper = (\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updates: AnimatedStyle<any>,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animatedStyle: MutableRefObject<AnimatedStyle<any>>,\n  adapters: ((updates: AnimatedStyle<any>) => void)[]\n): void => {\n  adapters.forEach((adapter) => {\n    adapter(updates);\n  });\n  animatedStyle.current.value = {\n    ...animatedStyle.current.value,\n    ...updates,\n  };\n\n  updateProps(viewDescriptors, updates, maybeViewRef);\n};\n\nexport default updateProps;\n\nconst createUpdatePropsManager = isFabric()\n  ? () => {\n      'worklet';\n      // Fabric\n      const operations: {\n        shadowNodeWrapper: ShadowNodeWrapper;\n        updates: StyleProps | AnimatedStyle<any>;\n      }[] = [];\n      return {\n        update(\n          viewDescriptors: SharedValue<Descriptor[]>,\n          updates: StyleProps | AnimatedStyle<any>\n        ) {\n          viewDescriptors.value.forEach((viewDescriptor) => {\n            operations.push({\n              shadowNodeWrapper: viewDescriptor.shadowNodeWrapper,\n              updates,\n            });\n            if (operations.length === 1) {\n              queueMicrotask(this.flush);\n            }\n          });\n        },\n        flush(this: void) {\n          _updatePropsFabric!(operations);\n          operations.length = 0;\n        },\n      };\n    }\n  : () => {\n      'worklet';\n      // Paper\n      const operations: {\n        tag: number;\n        name: string;\n        updates: StyleProps | AnimatedStyle<any>;\n      }[] = [];\n      return {\n        update(\n          viewDescriptors: SharedValue<Descriptor[]>,\n          updates: StyleProps | AnimatedStyle<any>\n        ) {\n          viewDescriptors.value.forEach((viewDescriptor) => {\n            operations.push({\n              tag: viewDescriptor.tag,\n              name: viewDescriptor.name || 'RCTView',\n              updates,\n            });\n            if (operations.length === 1) {\n              queueMicrotask(this.flush);\n            }\n          });\n        },\n        flush(this: void) {\n          _updatePropsPaper!(operations);\n          operations.length = 0;\n        },\n      };\n    };\n\nif (shouldBeUseWeb()) {\n  const maybeThrowError = () => {\n    // Jest attempts to access a property of this object to check if it is a Jest mock\n    // so we can't throw an error in the getter.\n    if (!isJest()) {\n      throw new Error(\n        '[Reanimated] `UpdatePropsManager` is not available on non-native platform.'\n      );\n    }\n  };\n  global.UpdatePropsManager = new Proxy({} as UpdatePropsManager, {\n    get: maybeThrowError,\n    set: () => {\n      maybeThrowError();\n      return false;\n    },\n  });\n} else {\n  runOnUIImmediately(() => {\n    'worklet';\n    global.UpdatePropsManager = createUpdatePropsManager();\n  })();\n}\n\nexport interface UpdatePropsManager {\n  update(\n    viewDescriptors: SharedValue<Descriptor[]>,\n    updates: StyleProps | AnimatedStyle<any>\n  ): void;\n  flush(): void;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}