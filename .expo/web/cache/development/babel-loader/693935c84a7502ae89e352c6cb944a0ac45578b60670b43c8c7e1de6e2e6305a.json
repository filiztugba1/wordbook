{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var handleLogin = function handleLogin() {\n    if (username === 'demo' && password === 'demo') {\n      navigation.navigate('WordbookScreen');\n    } else {\n      setError('Kullanıcı adı veya şifre hatalı.');\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.logo,\n      children: \"Wordbook\"\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Kullan\\u0131c\\u0131 Ad\\u0131\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return setUsername(text);\n        }\n      })\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        secureTextEntry: true,\n        style: styles.inputText,\n        placeholder: \"\\u015Eifre\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      })\n    }), error ? _jsx(Text, {\n      style: styles.errorText,\n      children: error\n    }) : null, _jsx(TouchableOpacity, {\n      style: styles.loginBtn,\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        style: styles.loginText,\n        children: \"Giri\\u015F Yap\"\n      })\n    })]\n  });\n};\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f8f8',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    fontWeight: 'bold',\n    fontSize: 50,\n    color: '#1877f2',\n    marginBottom: 40\n  },\n  inputView: {\n    width: '80%',\n    backgroundColor: '#ffffff',\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: 'center',\n    padding: 20\n  },\n  inputText: {\n    height: 50,\n    color: '#003f5c'\n  },\n  errorText: {\n    color: 'red',\n    marginBottom: 20\n  },\n  loginBtn: {\n    width: '80%',\n    backgroundColor: '#1877f2',\n    borderRadius: 25,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 10\n  },\n  loginText: {\n    color: 'white'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","error","setError","handleLogin","navigate","style","styles","container","children","logo","inputView","inputText","placeholder","placeholderTextColor","onChangeText","text","secureTextEntry","errorText","loginBtn","onPress","loginText","create","flex","backgroundColor","alignItems","justifyContent","fontWeight","fontSize","color","marginBottom","width","borderRadius","height","padding","marginTop"],"sources":["D:/react-native-uygulamalarım/wordbook/component/LoginScreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    // Burada kullanıcı adı ve şifrenin kontrolü yapılabilir\r\n    if (username === 'demo' && password === 'demo') {\r\n      // Doğru kullanıcı adı ve şifre ile giriş yapılacaksa işlemler burada yapılır\r\n      navigation.navigate('WordbookScreen'); // Wordbook ekranına yönlendirme\r\n    } else {\r\n      setError('Kullanıcı adı veya şifre hatalı.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.logo}>Wordbook</Text>\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={styles.inputText}\r\n          placeholder=\"Kullanıcı Adı\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          onChangeText={text => setUsername(text)}\r\n        />\r\n      </View>\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          secureTextEntry\r\n          style={styles.inputText}\r\n          placeholder=\"Şifre\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          onChangeText={text => setPassword(text)}\r\n        />\r\n      </View>\r\n      {error ? <Text style={styles.errorText}>{error}</Text> : null}\r\n      <TouchableOpacity style={styles.loginBtn} onPress={handleLogin}>\r\n        <Text style={styles.loginText}>Giriş Yap</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f8f8',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  logo: {\r\n    fontWeight: 'bold',\r\n    fontSize: 50,\r\n    color: '#1877f2',\r\n    marginBottom: 40,\r\n  },\r\n  inputView: {\r\n    width: '80%',\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 25,\r\n    height: 50,\r\n    marginBottom: 20,\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  inputText: {\r\n    height: 50,\r\n    color: '#003f5c',\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    marginBottom: 20,\r\n  },\r\n  loginBtn: {\r\n    width: '80%',\r\n    backgroundColor: '#1877f2',\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: 10,\r\n  },\r\n  loginText: {\r\n    color: 'white',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}